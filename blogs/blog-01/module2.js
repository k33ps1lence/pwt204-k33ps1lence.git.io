function toggleSidebar() {
    const sidebar = document.getElementById('sidebar');
    const content = document.getElementById('content');

    // Toggle class "open" cho sidebar
    sidebar.classList.toggle('open');

    // Toggle class "shift" cho nội dung
    content.classList.toggle('shift');
}
function vlan(number) {
  const content = {
    1: `<h3>Default VLAN</h3>
        <p> The default VLAN on a Cisco switch is VLAN 1. Therefore, all switch ports are on VLAN 1 unless it is explicitly configured to be on another VLAN. By default, all Layer 2 control traffic is associated with VLAN 1.
            <br><br>
            Important facts to remember about VLAN 1 include the following:
            <br><br>
            <ul>
                <li>All ports are assigned to VLAN 1 by default.</li>
                <li>The native VLAN is VLAN 1 by default.</li>
                <li>The management VLAN is VLAN 1 by default.</li>
                <li>VLAN 1 cannot be renamed or deleted.</li>
            </ul>
        For instance, in the show vlan brief output, all ports are currently assigned to the default VLAN 1. No native VLAN is explicitly assigned and no other VLANs are active; therefore, the network is designed with the native VLAN the same as the management VLAN. This is considered a security risk.</p>
        <img src="https://i.pinimg.com/736x/85/8b/72/858b7242fa31323705b397e405f4616b.jpg" alt="">`,
    2: `<h3>Data VLAN</h3>
        <p>
            Data VLANs are VLANs configured to separate user-generated traffic. They are referred to as user VLANs because they separate the network into groups of users or devices. A modern network would have many data VLANs depending on organizational requirements. Note that voice and network management traffic should not be permitted on data VLANs.
        </p>`,
    3: `<h3>Native VLAN</h3>
        <p>
            User traffic from a VLAN must be tagged with its VLAN ID when it is sent to another switch. Trunk ports are used between switches to support the transmission of tagged traffic. Specifically, an 802.1Q trunk port inserts a 4-byte tag in the Ethernet frame header to identify the VLAN to which the frame belongs.
            <br>
            A switch may also have to send untagged traffic across a trunk link. Untagged traffic is generated by a switch and may also come from legacy devices. The 802.1Q trunk port places untagged traffic on the native VLAN. The native VLAN on a Cisco switch is VLAN 1 (i.e., default VLAN).
            <br>
            It is a best practice to configure the native VLAN as an unused VLAN, distinct from VLAN 1 and other VLANs. In fact, it is not unusual to dedicate a fixed VLAN to serve the role of the native VLAN for all trunk ports in the switched domain.
        </p>`,
    4: `<h3>Management VLAN</h3>
        <p>
            A management VLAN is a data VLAN configured specifically for network management traffic including SSH, Telnet, HTTPS, HTTP, and SNMP. By default, VLAN 1 is configured as the management VLAN on a Layer 2 switch.
        </p>`,
    5: `<h3>Voice VLAN</h3>
        <p>
            A separate VLAN is needed to support Voice over IP (VoIP). VoIP traffic requires the following:
            <ul>
                <li>Assured bandwidth to ensure voice quality</li>
                <li>Transmission priority over other types of network traffic</li>
                <li>Ability to be routed around congested areas on the network</li>
                <li>Delay of less than 150 ms across the network</li>
                <li>To meet these requirements, the entire network has to be designed to support VoIP.</li>
            </ul>
            In the figure, VLAN 150 is designed to carry voice traffic. The student computer PC5 is attached to the Cisco IP phone, and the phone is attached to switch S3. PC5 is in VLAN 20, which is used for student data.
        </p>
        <img src="https://i.pinimg.com/736x/eb/b7/10/ebb710abdd52dd8e34c861879fe1984a.jpg" alt="">`,
  };
  if (number == 1) {
    document.getElementById('vlan').innerHTML = content[1];
  } else if (number == 2) {
    document.getElementById('vlan').innerHTML = content[2];
  } else if (number == 3) {
    document.getElementById('vlan').innerHTML = content[3];
  } else if (number == 4) {
    document.getElementById('vlan').innerHTML = content[4];
  } else {
    document.getElementById('vlan').innerHTML = content[5];
  }
}
function showContentByButton(number) {
  const content = {
    1: `<h3>Step 1</h3> 
        <h3>Configure the Management Interface</h3> 
        <p>From VLAN interface configuration mode, an IPv4 address and subnet mask 
        is applied to the management SVI of the switch. Specifically, SVI VLAN 99 will 
        be assigned the 172.17.99.11/24 IPv4 address and the 2001:db8:acad:99::1/64 
        IPv6 address as shown.</p>
        <p>Note: The SVI for VLAN 99 will not appear as “up/up” until VLAN 99 is created 
        and there is a device connected to a switch port associated with VLAN 99.</p>
        <p>Note: The switch may need to be configured for IPv6. For example, before you 
        can configure IPv6 addressing on a Cisco Catalyst 2960 running IOS version 15.0, 
        you will need to enter the global configuration command sdm prefer dual-ipv4-and-ipv6 
        default and then reload the switch.</p>
        <table>
          <tr>
            <th> Task </th>
            <th> 	IOS Commands </th>
          </tr>
          <tr>
            <td>Enter global configuration mode.</td>
            <td>S1# configure terminal</td>
          </tr>
          <tr>
            <td>Enter interface configuration mode for the SVI.</td>
            <td>S1(config)# interface vlan 99</td>
          </tr>
          <tr>
            <td>Configure the management interface IPv4 address.</td>
            <td>S1(config-if)# ip address 172.17.99.11 255.255.255.0</td>
          </tr>
          <tr>
            <td>Configure the management interface IPv6 address</td>
            <td>S1(config-if)# ipv6 address 2001:db8:acad:99::11/64</td>
          </tr>
          <tr>
            <td>Enable the management interface.</td>
            <td>S1(config-if)# no shutdown</td>
          </tr>
          <tr>
            <td>Return to the privileged EXEC mode.</td>
            <td>S1(config-if)# end</td>
          </tr>
          <tr>
            <td>Save the running config to the startup config.</td>
            <td>S1# copy running-config startup-config</td>
          </tr>
        </table>`
        ,
    2: `<h3>Step 2</h3>
        <h3>Configure the Default Gateway</h3> 
        <p>The switch should be configured with a default gateway if it will be managed remotely from networks that are not directly connected.</p>
        <p>Note: Because, it will receive its default gateway information from a router advertisement (RA) message, the switch does not require an IPv6 default gateway.</p>
         <table>
          <tr>
            <th> Task </th>
            <th> 	IOS Commands </th>
          </tr>
          <tr>
            <td>Enter global configuration mode.</td>
            <td>S1# configure terminal</td>
          </tr>
          <tr>
            <td>Configure the default gateway for the switch.</td>
            <td>S1(config)# ip default-gateway 172.17.99.1</td>
          </tr>
          <tr>
            <td>Return to the privileged EXEC mode.</td>
            <td>S1(config)# end</td>
          </tr>
          <tr>
            <td>Save the running config to the startup config.</td>
            <td>S1# copy running-config startup-config</td>
          </tr>
          </table>`,
    3: `<h3>Step 3</h3>
        <h3>Verify Configuration</h3>
        <p>The show ip interface brief and show ipv6 interface brief 
        commands are useful for determining the status of both physical 
        and virtual interfaces. The output shown confirms that interface
         VLAN 99 has been configured with an IPv4 and IPv6 address.</p>
         <p>Note: An IP address applied to the SVI is only for remote management 
         access to the switch; this does not allow the switch to route Layer 3 
         packets.</p>
         <img src="https://i.pinimg.com/1200x/08/0f/f8/080ff87c0f11fefd6ec4643f10f0d245.jpg" alt="">`,
  };
  if (number == 1) {
    document.getElementById('s').innerHTML = content[1];
  } else if (number == 2) {
    document.getElementById('s').innerHTML = content[2];
  } else {
    document.getElementById('s').innerHTML = content[3];
  }
  
}
function configureSSH (number){
  const content = {
    1: `<h3>Step 1 <br> Verify SSH support.</h3>
        <p>Use the show ip ssh command to verify that the switch supports SSH. If the switch is not running an IOS that supports cryptographic features, this command is unrecognized.</p>
        <h4>S1# show ip ssh</h4>`,
    2: `<h3>Step 2 <br> Configure the IP domain.</h3>
        <p>Configure the IP domain name of the network using the ip domain-name domain-name global configuration mode command. In the figure, the domain-name value is cisco.com.</p>
        <h4>S1(config)# ip domain-name cisco.com</h4>`,
    3: `<h3>Step 3 <br> Generate RSA key pairs.</h3>
        <p>Not all versions of the IOS default to SSH version 2, and SSH version 1 has known security flaws. To configure SSH version 2, issue the ip ssh version 2 global configuration mode command. Generating an RSA key pair automatically enables SSH. Use the crypto key generate rsa global configuration mode command to enable the SSH server on the switch and generate an RSA key pair. When generating RSA keys, the administrator is prompted to enter a modulus length. The sample configuration in the figure uses a modulus size of 1,024 bits. A longer modulus length is more secure, but it takes longer to generate and to use.
        <br>Note: To delete the RSA key pair, use the crypto key zeroize rsa global configuration mode command. After the RSA key pair is deleted, the SSH server is automatically disabled.</p>
        <h4>S1(config)# crypto key generate rsa <br>
        How many bits in the modulus [512]: 1024</h4>`,
    4: `<h3>Step 4 <br> Configure user authentication.</h3>
        <p>The SSH server can authenticate users locally or using an authentication server. To use the local authentication method, create a username and password pair using the username username secret password global configuration mode command. In the example, the user admin is assigned the password ccna.</p>
        <h4>S1(config)# username admin secret ccna</h4>`,
    5: `<h3>Step 5 <br> Configure the vty lines.</h3>
        <p>Enable the SSH protocol on the vty lines by using the transport input ssh line configuration mode command. The Catalyst 2960 has vty lines ranging from 0 to 15. This configuration prevents non-SSH (such as Telnet) connections and limits the switch to accept only SSH connections. Use the line vty global configuration mode command and then the login local line configuration mode command to require local authentication for SSH connections from the local username database.</p>
        <h4>S1(config)# line vty 0 15
        <br> S1(config-line)# transport input ssh
        <br> S1(config-line)# login local
        <br> S1(config-line)# exit</h4>`,
    6: `<h3>Step 6
        <br>Enable SSH version 2.</h3>
        <p>By default, SSH supports both versions 1 and 2. When supporting both versions, this is shown in the show ip ssh output as supporting version 2. Enable SSH version using the ip ssh version 2 global configuration command.</p>
        <h4>S1(config)# ip ssh version 2</h4>`,
  };
  switch (number) {
    case 1:
      document.getElementById('ssh').innerHTML = content[1];
      break;
    case 2:
      document.getElementById('ssh').innerHTML = content[2];
      break;
    case 3:
      document.getElementById('ssh').innerHTML = content[3];
      break;
    case 4:
      document.getElementById('ssh').innerHTML = content[4];
      break;
    case 5:
      document.getElementById('ssh').innerHTML = content[5];
      break;
    case 6:
      document.getElementById('ssh').innerHTML = content[6];
      break;
  }
}
function filterShow(number) {
  const content = {
    1: `<h3>section</h3>
        <p>Shows the entire section that starts with the filtering expression, as shown in the example.</p>
        <h4>
          <br>R1# show running-config | section line vty
          <br>line vty 0 4
          <br>password 7 110A1016141D
          <br>&nbsp;&nbsp;login
          <br>&nbsp;&nbsp;transport input all
        </h4>`,
    2: `<h3>include</h3>
        <p>Includes all output lines that match the filtering expression, as shown in the example.</p>
        <h4>
          R1# show ip interface brief
          <br>Interface______________IP-Address______OK? Method Status                Protocol
          <br>GigabitEthernet0/0/0___192.168.10.1____YES manual up                    up
          <br>GigabitEthernet0/0/1___192.168.11.1____YES manual up                    up
          <br>Serial0/1/0____________209.165.200.225_YES manual up                    up
          <br>Serial0/1/1____________unassigned______NO  unset  down                  down
          <br>R1#
          <br>R1# show ip interface brief | include up
          <br>GigabitEthernet0/0/0___192.168.10.1____YES manual up                    up
          <br>GigabitEthernet0/0/1___192.168.11.1____YES manual up                    up
          <br>Serial0/1/0____________209.165.200.225 YES manual up                    up
        </h4>`,
    3: `<h3>exclude</h3>
        <p>Excludes all output lines that match the filtering expression, as shown in the example.</p>
        <h4>
          R1# show ip interface brief
          <br>Interface______________IP-Address______OK? Method Status________________Protocol
          <br>GigabitEthernet0/0/0___192.168.10.1____YES manual_up____________________up
          <br>GigabitEthernet0/0/1___192.168.11.1____YES manual_up____________________up
          <br>Serial0/1/0____________209.165.200.225_YES manual_up____________________up
          <br>Serial0/1/1____________unassigned______NO  unset__down__________________down
          <br>R1#
          <br>R1# show ip interface brief | exclude unassigned
          <br>Interface______________IP-Address______OK? Method Status_______________Protocol
          <br>GigabitEthernet0/0/0___192.168.10.1____YES manual up____________________up
          <br>GigabitEthernet0/0/1___192.168.11.1____YES manual up____________________up
          <br>Serial0/1/0____________209.165.200.225_YES manual up____________________up                   up
        </h4>`,
    4: `<h3>begin</h3>
        <p>Shows all the output lines from a certain point, starting with the line that matches the filtering expression, as shown in the example.</p>
        <h4>
          R1# show ip route | begin Gateway
          <br>Gateway of last resort is not set
          <br>192.168.10.0/24 is variably subnetted, 2 subnets, 2 masks
          <br>C________192.168.10.0/24 is directly connected, GigabitEthernet0/0/0
          <br>L________192.168.10.1/32 is directly connected, GigabitEthernet0/0/0
          <br>______192.168.11.0/24 is variably subnetted, 2 subnets, 2 masks
          <br>C________192.168.11.0/24 is directly connected, GigabitEthernet0/0/1
          <br>L________192.168.11.1/32 is directly connected, GigabitEthernet0/0/1
          <br>______209.165.200.0/24 is variably subnetted, 2 subnets, 2 masks
          <br>C________209.165.200.224/30 is directly connected, Serial0/1/0
          <br>L________209.165.200.225/32 is directly connected, Serial0/1/0                  up                   up
        </h4>`,
  };
  if (number == 1) {
    document.getElementById('filter').innerHTML = content[1];
  } else if (number ==2) {
    document.getElementById('filter').innerHTML = content[2];
  } else if (number ==3) {
    document.getElementById('filter').innerHTML = content[3];
  } else {
    document.getElementById('filter').innerHTML = content[4];
  }
}
function content (number) {
  const noiDung = {
    1: `
                    <h1>Introduction</h1>
                    <h2>Why should I take this module?</h2>
                    <p>Welcome to Basic Device Configuration!</p>
                    <p> Welcome to the first module in CCNA Switching, Routing, and Wireless Essentials! You know that switches and routers come with some built-in configuration, so why would you need to learn to further configure switches and routers? </p>
                    <p>Imagine that you purchased a model train set. After you had set it up, you realized that the track was just a simple oval shape and that the train cars only ran clockwise. You might want the track to be a figure eight shape with 
                        an overpass. You might want to have two trains that operate independently of each other and are able to move in different directions. How could you make that happen? You would need to reconfigure the track and the controls. 
                        It is the same with network devices. As a network administrator you need detailed control of the devices in your network. This means precisely configuring switches and routers so that your network does what you want it to do. 
                        This module has many Syntax Checker and Packet Tracer activities to help you develop these skills. Let’s get started!</p>
                    <h2>What will I learn to do in this module?</h2>
                    <p>Module Title: Basic Device Configuration</p>
                    <p>Module Objective: Configure devices using security best practices.</p>
                    <table>
                        <tr>
                            <th>Topic Title</th>
                            <th>Topic Objective</th>
                        </tr>
                        <tr>
                            <td>Configure a Switch with Initial Settings</td>
                            <td>Configure initial settings on a Cisco switch.</td>
                        </tr>
                        <tr>
                            <td>Configure Switch Ports</td>
                            <td>Configure switch ports to meet network requirements.</td>
                        </tr>
                        <tr>
                            <td>Secure Remote Access</td>
                            <td>Configure secure management access on a switch.</td>
                        </tr>
                        <tr>
                            <td>Basic Router Configuration</td>
                            <td>	Configure basic settings on a router to route between two directly-connected networks, using CLI.</td>
                        </tr>
                        <tr>
                            <td>Verify Directly Connected Networks</td>
                            <td>	Verify connectivity between two networks that are directly connected to a router.</td>
                        </tr>
                    </table>
                    <h1>Configure a Switch with Initial Settings</h1>
                    <h2>Switch Boot Sequence</h2>
                    <p>Before you can configure a switch, you need to turn it on and allow it to go through the five-step boot sequence. This topic covers the basics of configuring a switch and includes a lab at the end.</p>

                    <p>After a Cisco switch is powered on, it goes through the following five-step boot sequence:</p>
                    <p>Step 1: First, the switch loads a power-on self-test (POST) program stored in ROM. POST checks the CPU subsystem. It tests the CPU, DRAM, and the portion of the flash device that makes up the flash file system.
                        <br>Step 2: Next, the switch loads the boot loader software. The boot loader is a small program stored in ROM that is run immediately after POST successfully completes.
                        <br>Step 3: The boot loader performs low-level CPU initialization. It initializes the CPU registers, which control where physical memory is mapped, the quantity of memory, and its speed.
                        <br>Step 4: The boot loader initializes the flash file system on the system board.
                        <br>Step 5: Finally, the boot loader locates and loads a default IOS operating system software image into memory and gives control of the switch over to the IOS.</p>
                    <h2>The boot system Command</h2>
                    <p>The switch attempts to automatically boot by using information in the BOOT environment variable. If this variable is not set, the switch attempts to load and execute the first executable file it can find. On Catalyst 2960 Series switches, the image file is normally contained in a directory that has the same name as the image file (excluding the .bin file extension).</p>
                    <p>The IOS operating system then initializes the interfaces using the Cisco IOS commands found in the startup-config file. The startup-config file is called config.text and is located in flash.</p>
                    <p>In the example, the BOOT environment variable is set using the boot system global configuration mode command. Notice that the IOS is located in a distinct folder and the folder path is specified. Use the command show boot to see what the current IOS boot file is set to.</p>
                    <h3>S1(config)# boot system flash:/c2960-lanbasek9-mz.150-2.SE/c2960-lanbasek9-mz.150-2.SE.bin</h3>
                    <p>The table defines each part of the boot system command.</p>
                    <table>
                        <tr>
                            <th>Table caption Command</th>
                            <th>Definition</th>
                        </tr>
                        <tr>
                            <td>boot system</td>
                            <td>The main command</td>
                        </tr>
                        <tr>
                            <td>flash: </td>
                            <td>The storage device</td>
                        </tr>
                        <tr>
                            <td>c2960-lanbasek9-mz.150-2.SE/</td>
                            <td>The path to the file system</td>
                        </tr>
                        <tr>
                            <td>c2960-lanbasek9-mz.150-2.SE.bin</td>
                            <td>The path to the file system</td>
                        </tr>
                    </table>
                    <h2>Switch LED Indicators</h2>
                    <p>Cisco Catalyst switches have several status LED indicator lights. You can use the switch LEDs to quickly monitor switch activity and performance. Switches of different models and feature sets will have different LEDs and their placement on the front panel of the switch may also vary.</p>
                    <p>The figure shows the switch LEDs and the Mode button for a Cisco Catalyst 2960 switch.</p>
                    <img src="https://contenthub.netacad.com/courses/srwe-dl/af9ea780-34fe-11eb-b1b2-9b1b0c1f7e0d/afb58ae1-34fe-11eb-b1b2-9b1b0c1f7e0d/assets/c9569b61-1c27-11ea-af09-3b2e6521927c.jpg" alt="">
                    <p>The Mode button (7 in the figure) is used to toggle through port status, port duplex, port speed, and if supported, the Power over Ethernet (PoE) status of the port LEDs (8 in the figure).</p>
                    <div style="display: flex; gap: 10px;">
                        <button type="button" onclick="document.getElementById('ctn').innerHTML = '<h3>System LED </h3> <p> Shows whether the system is receiving power and is functioning properly. If the LED is off, it means the system is not powered on. If the LED is green, the system is operating normally. If the LED is amber, the system is receiving power but is not functioning properly.</p>'">1 SYST</button>
                        <button type="button" onclick="document.getElementById('ctn').innerHTML = '<h3>Redundant Power System (RPS) LED</h3> <p>Shows the RPS status. If the LED is off, the RPS is off, or it is not properly connected. If the LED is green, the RPS is connected and ready to provide backup power. If the LED is blinking green, the RPS is connected but is unavailable because it is providing power to another device. If the LED is amber, the RPS is in standby mode, or in a fault condition. If the LED is blinking amber, the internal power supply in the switch has failed, and the RPS is providing power.</p>'">2 RPS</button>
                        <button type="button" onclick="document.getElementById('ctn').innerHTML = '<h3>Port Status LED</h3> <p>Indicates that the port status mode is selected when the LED is green. This is the default mode. When selected, the port LEDs will display colors with different meanings. If the LED is off, there is no link, or the port was administratively shut down. If the LED is green, a link is present. If the LED is blinking green, there is activity and the port is sending or receiving data. If the LED is alternating green-amber, there is a link fault. If the LED is amber, the port is blocked to ensure that a loop does not exist in the forwarding domain and is not forwarding data (typically, ports will remain in this state for the first 30 seconds after being activated). If the LED is blinking amber, the port is blocked to prevent a possible loop in the forwarding domain.</p>'">3 STAT</button>
                        <button type="button" onclick="document.getElementById('ctn').innerHTML = '<h3>Port Duplex LED</h3> <p>Indicates that the port duplex mode is selected when the LED is green. When selected, port LEDs that are off are in half-duplex mode. If the port LED is green, the port is in full-duplex mode.</p>'">4 DUPLX</button>
                        <button type="button" onclick="document.getElementById('ctn').innerHTML = '<h3>Port Speed LED</h3><p>Indicates that the port speed mode is selected. When selected, the port LEDs will display colors with different meanings. If the LED is off, the port is operating at 10 Mbps. If the LED is green, the port is operating at 100 Mbps. If the LED is blinking green, the port is operating at 1000 Mbps.</p>'">5 SPEED</button>
                        <button type="button" onclick="document.getElementById('ctn').innerHTML = '<h3>Power over Ethernet (PoE) Mode LED</h3><p>If PoE is supported, a PoE mode LED will be present. If the LED is off, it indicates the PoE mode is not selected and that none of the ports have been denied power or placed in a fault condition. If the LED is blinking amber, the PoE mode is not selected but at least one of the ports has been denied power or has a PoE fault. If the LED is green, it indicates the PoE mode is selected and the port LEDs will display colors with different meanings. If the port LED is off, the PoE is off. If the port LED is green, the PoE is on. If the port LED is alternating green-amber, PoE is denied because providing power to the powered device will exceed the switch power capacity. If the LED is blinking amber, PoE is off because of a fault. If the LED is amber, PoE for the port has been disabled.</p>'">6 PoE</button>
                    </div>
                    <p class="subcontent" id="ctn"></p>
                    <h2>Recovering from a System Crash</h2>
                    <p>The boot loader provides access into the switch if the operating system cannot be used because of missing or damaged system files. The boot loader has a command-line that provides access to the files stored in flash memory.</p>
                    <p>The boot loader can be accessed through a console connection following these steps:</p>
                    <p>Step 1. Connect a PC by console cable to the switch console port. Configure terminal emulation software to connect to the switch.
                        <br>Step 2. Unplug the switch power cord.
                        <br>Step 3. Reconnect the power cord to the switch and, within 15 seconds, press and hold down the Mode button while the System LED is still flashing green.
                        <br>Step 4. Continue pressing the Mode button until the System LED turns briefly amber and then solid green; then release the Mode button.
                        <br>Step 5. The boot loader switch: prompt appears in the terminal emulation software on the PC.</p>
                    <p>Type the help or ? at the boot loader prompt to view a list of available commands.</p>
                    <p>By default, the switch attempts to automatically boot up by using information in the BOOT environment variable. To view the path of the switch BOOT environment variable type the set command. Then, initialize the flash file system using the flash_init command to view the current files in flash, as shown in the output.</p>
                    <h4>
                        switch: set
                        <br>BOOT=flash:/c2960-lanbasek9-mz.122-55.SE7/c2960-lanbasek9-mz.122-55.SE7.bin
                        <br>(output omitted)
                        <br>switch: flash_init
                        <br>Initializing Flash...
                        <br>flashfs[0]: 2 files, 1 directories
                        <br>flashfs[0]: 0 orphaned files, 0 orphaned directories
                        <br>flashfs[0]: Total bytes: 32514048
                        <br>flashfs[0]: Bytes used: 11838464
                        <br>flashfs[0]: Bytes available: 20675584
                        <br>flashfs[0]: flashfs fsck took 10 seconds.
                        <br>...done Initializing Flash.
                    </h4>
                    <p>After flash has finished initializing you can enter the dir flash: command to view the directories and files in flash, as shown in the output.</p>
                    <h4>
                        switch: dir flash: 
                        <br>Directory of flash:/
                        <br>____2  -rwx  11834846_________________c2960-lanbasek9-mz.150-2.SE8.bin
                        <br>____3  -rwx  2072_____________________multiple-fs
                    </h4>
                    <p>Enter the BOOT=flash command to change the BOOT environment variable path the switch uses to load the new IOS in flash. To verify the new BOOT environment variable path, issue the set command again. Finally, to load the new IOS type the boot command without any arguments, as shown in the output.</p>
                    <h4>
                        switch: BOOT=flash:c2960-lanbasek9-mz.150-2.SE8.bin
                        <br>switch: set
                        <br>BOOT=flash:c2960-lanbasek9-mz.150-2.SE8.bin
                        <br>(output omitted)
                        <br>switch: boot
                    </h4>
                    <p>The boot loader commands support initializing flash, formatting flash, installing a new IOS, changing the BOOT environment variable and recovery of lost or forgotten passwords.</p>
                    <h2>Switch Management Access</h2>
                    <p>To prepare a switch for remote management access, the switch must have a switch virtual interface (SVI) configured with an IPv4 address and subnet mask or an IPv6 address and a prefix length for IPv6. The SVI is a virtual interface, not a physical port on the switch. Keep in mind that to manage the switch from a remote network, the switch must be configured with a default gateway. This is very similar to configuring the IP address information on host devices.</p>
                    <img src="https://i.pinimg.com/736x/cb/dd/06/cbdd06546e7ad79efb7ba9dc4b78413b.jpg" alt="">
                    <h2>Switch SVI Configuration Example</h2>
                    <p>By default, the switch is configured to have its management controlled through VLAN 1. All ports are assigned to VLAN 1 by default. For security purposes, it is considered a best practice to use a VLAN other than VLAN 1 for the management VLAN, such as VLAN 99 in the example.</p>
                    <div style="display: flex; gap: 10px;">
                        <button type="button" onclick="showContentByButton(1)">Step 1</button>
                        <button type="button" onclick="showContentByButton(2)">Step 2</button>
                        <button type="button" onclick="showContentByButton(3)">Step 3</button>
                    </div>
                    <p class="subcontent" id="s"></p>
                    <h1>Configure Switch Ports</h1>
                    <h2>Duplex Communication</h2>
                    <p>The ports of a switch can be configured independently for different needs. This topic covers how to configure switch ports, how to verify your configurations, common errors, and how to troubleshoot switch configuration issues.</p>
                    <p>Full-duplex communication increases bandwidth efficiency by allowing both ends of 
                        a connection to transmit and receive data simultaneously. 
                        This is also known as bidirectional communication and it requires
                         microsegmentation. A microsegmented LAN is created when a switch 
                         port has only one device connected and is operating in full-duplex mode. 
                         There is no collision domain associated with a switch port operating in full-duplex 
                         mode.</p>
                    <p>Unlike full-duplex communication, half-duplex communication is unidirectional. 
                        Half-duplex communication creates performance issues because data can flow in only one direction at a time, 
                        often resulting in collisions. Half-duplex connections are typically seen in older hardware, such as hubs. 
                        Half-duplex hubs have been replaced by switches that use full-duplex communications by default.</p>
                    <p>The figure illustrates full-duplex and half-duplex communication.</p>
                    <img src="https://i.pinimg.com/736x/a8/7d/32/a87d325932e8e6d1511197f28a75e451.jpg" alt="">
                    <p>Gigabit Ethernet and 10 Gb NICs require full-duplex connections to operate. In full-duplex mode, 
                        the collision detection circuit on the NIC is disabled. Full-duplex offers 100 percent efficiency
                        in both directions (transmitting and receiving).</p>
                    <h2>Configure Switch Ports at the Physical Layer</h2>
                    <p>Switch ports can be manually configured with specific duplex and speed settings. Use the duplex interface 
                        configuration mode command to manually specify the duplex mode for a switch port. Use the speed interface
                         configuration mode command to manually specify the speed. For example, both switches in the topology should 
                         always operate in full-duplex at 100 Mbps.
                        </p>
                    <img src="https://i.pinimg.com/1200x/14/7a/b2/147ab27a2a01d937ad8c01915c128f82.jpg"" alt="">
                    <p>The table shows the commands for S1. The same commands can be applied to S2.</p>
                    <table>
                        <tr>
                            <th>Task</th>
                            <th>IOS Commands</th>
                        </tr>
                        <tr>
                            <td>Enter global configuration mode.</td>
                            <td><code>S1# configure terminal</code></td>
                        </tr>
                        <tr>
                            <td>Enter interface configuration mode.</td>
                            <td><code>S1(config)# interface FastEthernet 0/1</code></td>
                        </tr>
                        <tr>
                            <td>Configure the interface duplex.</td>
                            <td><code>S1(config-if)# duplex full</code></td>
                        </tr>
                        <tr>
                            <td>Configure the interface speed.</td>
                            <td><code>S1(config-if)# speed 100</code></td>
                        </tr>
                        <tr>
                            <td>Return to the privileged EXEC mode.</td>
                            <td><code>S1(config-if)# end</code></td>
                        </tr>
                        <tr>
                            <td>Save the running config to the startup config.</td>
                            <td><code>S1# copy running-config startup-config</code></td>
                        </tr>
                    </table>
                    <p>The default setting for both duplex and speed for switch ports on Cisco Catalyst 2960 and 3560 
                        switches is auto. The 10/100/1000 ports operate in either half- or full-duplex mode when they 
                        are set to 10 or 100 Mbps and operate only in full-duplex mode when it is set to 1000 Mbps (1 Gbps). 
                        Autonegotiation is useful when the speed and duplex settings of the device connecting to the port are 
                        unknown or may change. When connecting to known devices such as servers, dedicated workstations, or 
                        network devices, a best practice is to manually set the speed and duplex settings.</p>
                    <p>When troubleshooting switch port issues, it is important that the duplex and speed settings should be checked.</p>
                    <p>Note: Mismatched settings for the duplex mode and speed of switch ports can cause connectivity issues. Autonegotiation failure creates mismatched settings.</p>
                    <p>All fiber-optic ports, such as 1000BASE-SX ports, operate only at one preset speed and are always full-duplex.</p>
                    <h2>Auto-MDIX</h2>
                    <p>Until recently, certain cable types (straight-through or crossover) were required when connecting devices. Switch-to-switch or switch-to-router connections 
                        required using different Ethernet cables. Using the automatic medium-dependent interface crossover (auto-MDIX) feature on an interface eliminates this problem. 
                        When auto-MDIX is enabled, the interface automatically detects the required cable connection type (straight-through or crossover) and configures the connection 
                        appropriately. When connecting to switches without the auto-MDIX feature, straight-through cables must be used to connect to devices such as servers, workstations, 
                        or routers. Crossover cables must be used to connect to other switches or repeaters.</p>
                    <p>With auto-MDIX enabled, either type of cable can be used to connect to other devices, and the interface automatically adjusts to communicate successfully. 
                        On newer Cisco switches, the mdix auto interface configuration mode command enables the feature. When using auto-MDIX on an interface, the interface speed and duplex must be set to auto so that the feature operates correctly.</p>
                    <p>The command to enable auto-MDIX is issued in interface configuration mode on the switch as shown:</p>
                    <h4>S1(config-if)# mdix auto</h4>
                    <p>Note: The auto-MDIX feature is enabled by default on Catalyst 2960 and Catalyst 3560 switches but is not available on the older Catalyst 2950 and Catalyst 3550 switches.</p>
                    <p>To examine the auto-MDIX setting for a specific interface, use the show controllers ethernet-controller command with the phy keyword. To limit the output to lines referencing auto-MDIX, use the include MDIX filter. 
                        As shown the output indicates On or Off for the feature.</p>
                    <h4>S1# show controllers ethernet-controller fa0/1 phy | include MDIX <br> 
                        Auto-MDIX           :  On   [AdminState=1   Flags=0x00052248]</h44>
                    <h2>Switch Verification Commands</h2>
                    <p>The table summarizes some of the more useful switch verification commands.</p>
                    <table>
                        <tr>
                            <th>Task</th>
                            <th>IOS Commands</th>
                        </tr>
                        <tr>
                            <td>Display interface status and configuration.</td>
                            <td><code>S1# show interfaces [<i>interface-id</i>]</code></td>
                        </tr>
                        <tr>
                            <td>Display current startup configuration.</td>
                            <td><code>S1# show startup-config</code></td>
                        </tr>
                        <tr>
                            <td>Display current running configuration.</td>
                            <td><code>S1# show running-config</code></td>
                        </tr>
                        <tr>
                            <td>Display information about flash file system.</td>
                            <td><code>S1# show flash</code></td>
                        </tr>
                        <tr>
                            <td>Display system hardware and software status.</td>
                            <td><code>S1# show version</code></td>
                        </tr>
                        <tr>
                            <td>Display history of command entered.</td>
                            <td><code>S1# show history</code></td>
                        </tr>
                        <tr>
                            <td>Display IP information about an interface.</td>
                            <td>
                                <code>S1# show ip interface [<i>interface-id</i>]</code><br>
                                or<br>
                                <code>S1# show ipv6 interface [<i>interface-id</i>]</code>
                            </td>
                        </tr>
                        <tr>
                            <td>Display the MAC address table.</td>
                            <td>
                                <code>S1# show mac-address-table</code><br>
                                or <br>
                                <code>S1# show mac address-table</code>
                            </td>
                        </tr>
                    </table>
                    <h2>Verify Switch Port Configuration</h2>
                    <p>The show running-config command can be used to verify that the switch has been correctly configured. From the sample abbreviated output on S1, some important information is shown in the figure:</p>
                    <ul>
                        <li>Fast Ethernet 0/18 interface is configured with the management VLAN 99</li>
                        <li>VLAN 99 is configured with an IPv4 address of 172.17.99.11 255.255.255.0</li>
                        <li>The default gateway is set to 172.17.99.1</li>
                    </ul>
                    <h4>
                        S1# show running-config
                        <br>Building configuration...
                        <br>Current configuration : 1466 bytes
                        <br>!
                        <br>interface FastEthernet0/18
                        <br>switchport access vlan 99
                        <br>switchport mode access
                        <br>!
                        <br>(output omitted)
                        <br>!
                        <br>interface Vlan99
                        <br>ip address 172.17.99.11 255.255.255.0
                        <br>ipv6 address 2001:DB8:ACAD:99::1/64
                        <br>!
                        <br>ip default-gateway 172.17.99.1 
                    </h4>
                    <p>The show interfaces command is another commonly used command, which displays status and statistics information on the network interfaces of the switch. The show interfaces command is frequently used when configuring and monitoring network devices.</p>
                    <p>The first line of the output for the show interfaces fastEthernet 0/18 command indicates that the FastEthernet 0/18 interface is up/up, meaning that it is operational. Further down, the output shows that the duplex is full and the speed is 100 Mbps.</p>
                    <h4>
                        S1# show interfaces fastEthernet 0/18
                        <br>FastEthernet0/18 is up, line protocol is up (connected)
                        <br>Hardware is Fast Ethernet, address is 0025.83e6.9092 (bia 0025.83e6.9092)
                        <br>MTU 1500 bytes, BW 100000 Kbit/sec, DLY 100 usec,
                        <br>    reliability 255/255, txload 1/255, rxload 1/255
                        <br>Encapsulation ARPA, loopback not set
                        <br>Keepalive set (10 sec)
                        <br>Full-duplex, 100Mb/s, media type is 10/100BaseTX
                    </h4>
                    <h2>Network Access Layer Issues</h2>
                    <p>The output from the show interfaces command is useful for detecting common media issues. One of the most important parts of this output is the display of the line and data link protocol status, as shown in the example.</p>
                    <h4>
                        S1# show interfaces fastEthernet 0/18
                        <br>FastEthernet0/18 is up, line protocol is up (connected)
                        <br>Hardware is Fast Ethernet, address is 0025.83e6.9092 (bia 0025.83e6.9092)MTU 1500 bytes, BW 100000 Kbit/sec, DLY 100 usec,
                    </h4>
                    <p>The first parameter (FastEthernet0/18 is up) refers to the hardware layer and indicates whether the interface is receiving a carrier detect signal. The second parameter (line protocol is up) refers to the data link layer and indicates whether the data link layer protocol keepalives are being received.</p>
                    <p>Based on the output of the show interfaces command, possible problems can be fixed as follows:</p>
                    <ul>
                        <li>If the interface is up and the line protocol is down, a problem exists. There could be an encapsulation type mismatch, the interface on the other end could be error-disabled, or there could be a hardware problem. </li>
                        <li>If the line protocol and the interface are both down, a cable is not attached, or some other interface problem exists. For example, in a back-to-back connection, the other end of the connection may be administratively down. </li>
                        <li>If the interface is administratively down, it has been manually disabled (the shutdown command has been issued) in the active configuration.</li>
                    </ul>
                    <p>The show interfaces command output displays counters and statistics for the FastEthernet0/18 interface, as highlighted in the example.</p>
                    <img src="https://i.pinimg.com/736x/98/6c/19/986c19d2eb50a79cfb375d7cc78b8e7c.jpg" alt="">
                    <p>Some media errors are not severe enough to cause the circuit to fail but do cause network performance issues. The table explains some of these common errors which can be detected using the show interfaces command.</p>
                    <table>
                        <tr>
                            <th>Error Type</th>
                            <th>Description</th>
                        </tr>
                        <tr>
                            <td class="bold">Input Errors</td>
                            <td>Total number of errors. It includes runts, giants, no buffer, CRC, frame, overrun, and ignored counts.</td>
                        </tr>
                        <tr>
                            <td class="bold">Runts</td>
                            <td>Frames that are discarded because they are smaller than the minimum frame size for the medium. For instance, any Ethernet frame that is less than 64 bytes is considered a runt.</td>
                        </tr>
                        <tr>
                            <td class="bold">Giants</td>
                            <td>Frames that are discarded because they exceed the maximum frame size for the medium. For example, any Ethernet frame that is greater than 1,518 bytes is considered a giant.</td>
                        </tr>
                        <tr>
                            <td class="bold">CRC</td>
                            <td>CRC errors are generated when the calculated checksum is not the same as the checksum received.</td>
                        </tr>
                        <tr>
                            <td class="bold">Output Errors</td>
                            <td>Sum of all errors that prevented the final transmission of datagrams out of the interface that is being examined.</td>
                        </tr>
                        <tr>
                            <td class="bold">Collisions</td>
                            <td>Number of messages retransmitted because of an Ethernet collision.</td>
                        </tr>
                        <tr>
                            <td class="bold">Late Collisions</td>
                            <td>A collision that occurs after 512 bits of the frame have been transmitted.</td>
                        </tr>
                    </table>
                    <h2>Interface Input and Output Errors</h2>
                    <p>“Input errors” is the sum of all errors in datagrams that were received on the interface being examined. This includes runts, giants, CRC, no buffer, frame, overrun, and ignored counts. The reported input errors from the show interfaces command include the following:</p>
                    <ul>
                        <li>Runt Frames - Ethernet frames that are shorter than the 64-byte minimum allowed length are called runts. Malfunctioning NICs are the usual cause of excessive runt frames, but they can also be caused by collisions. </li>
                        <li>Giants - Ethernet frames that are larger than the maximum allowed size are called giants. </li>
                        <li>CRC errors - On Ethernet and serial interfaces, CRC errors usually indicate a media or cable error. Common causes include electrical interference, loose or damaged connections, or incorrect cabling. If you see many CRC errors, there is too much noise on the link and you should inspect the cable. You should also search for and eliminate noise sources.</li>
                    </ul>
                    <p>“Output errors” is the sum of all errors that prevented the final transmission of datagrams out the interface that is being examined. The reported output errors from the show interfaces command include the following:</p>
                    <ul>
                        <li>Collisions - Collisions in half-duplex operations are normal. However, you should never see collisions on an interface configured for full-duplex communication.</li>
                        <li>Late collisions - A late collision refers to a collision that occurs after 512 bits of the frame have been transmitted. Excessive cable lengths are the most common cause of late collisions. Another common cause is duplex misconfiguration. For example, you could have one end of a connection configured for full-duplex and the other for half-duplex. You would see late collisions on the interface that is configured for half-duplex. In that case, you must configure the same duplex setting on both ends. A properly designed and configured network should never have late collisions.</li>
                    </ul>
                    <h2>Troubleshooting Network Access Layer Issues</h2>
                    <p>Most issues that affect a switched network are encountered during the original implementation. Theoretically, after it is installed, a network continues to operate without problems. However, cabling gets damaged, configurations change, and new devices are connected to the switch that require switch configuration changes. Ongoing maintenance and troubleshooting of the network infrastructure is required.</p>
                    <p>To troubleshoot scenarios involving no connection, or a bad connection, between a switch and another device, follow the general process shown in the figure.</p>
                    <img src="https://i.pinimg.com/736x/c7/5d/18/c75d185890f7ed123dabe6bac1453bc1.jpg" alt="">
                    <p>Use the show interfaces command to check the interface status.</p>
                    <p>If the interface is down:</p>
                    <ul>
                        <li>Check to make sure that the proper cables are being used. Additionally, check the cable and connectors for damage. If a bad or incorrect cable is suspected, replace the cable.</li>
                        <li>If the interface is still down, the problem may be due to a mismatch in speed setting. The speed of an interface is typically autonegotiated; therefore, even if it is manually applied to one interface, the connecting interface should autonegotiate accordingly. If a speed mismatch does occur through misconfiguration, or a hardware or software issue, then that may result in the interface going down. Manually set the same speed on both connection ends if a problem is suspected.
                        </li>
                    </ul>
                    <p>If the interface is up, but issues with connectivity are still present:</p>
                    <ul>
                        <li>Using the show interfaces command, check for indications of excessive noise. Indications may include an increase in the counters for runts, giants, and CRC errors. If there is excessive noise, first find and remove the source of the noise, if possible. Also, verify that the cable does not exceed the maximum cable length and check the type of cable that is used.</li>
                        <li>If noise is not an issue, check for excessive collisions. If there are collisions or late collisions, verify the duplex settings on both ends of the connection. Much like the speed setting, the duplex setting is usually autonegotiated. If there does appear to be a duplex mismatch, manually set the duplex to full on both ends of the connection.</li>
                    </ul>
                    <h1>Secure Remote Access</h1>
                    <h2>Telnet Operation</h2>
                    <p>You might not always have direct access to your switch when you need to configure it. You need to be able to access it remotely and it is imperative that your access is secure. This topic discusses how to configure Secure Shell (SSH) for remote access. A Packet Tracer activity gives you the opportunity to try this yourself.

                        <br> <br> Telnet uses TCP port 23. It is an older protocol that uses unsecure plaintext transmission of both the login authentication (username and password) and the data transmitted between the communicating devices. A threat actor can monitor packets using Wireshark. For example, in the figure the threat actor captured the username admin and password ccna from a Telnet session.</p>
                    <img src="https://contenthub.netacad.com/courses/srwe-dl/af9ea780-34fe-11eb-b1b2-9b1b0c1f7e0d/afb58ae5-34fe-11eb-b1b2-9b1b0c1f7e0d/assets/c9642ff0-1c27-11ea-af09-3b2e6521927c.png" alt="">
                    <h2>SSH Operation</h2>
                    <p>Secure Shell (SSH) is a secure protocol that uses TCP port 22. It provides a secure (encrypted) management connection to a remote device. SSH should replace Telnet for management connections. SSH provides security for remote connections by providing strong encryption when a device is authenticated (username and password) and also for the transmitted data between the communicating devices.

                    <br><br>For example, the figure shows a Wireshark capture of an SSH session. The threat actor can track the session using the IP address of the administrator device. However, unlike Telnet, with SSH the username and password are encrypted.</p>
                    
                    <img src="https://contenthub.netacad.com/courses/srwe-dl/af9ea780-34fe-11eb-b1b2-9b1b0c1f7e0d/afb58ae5-34fe-11eb-b1b2-9b1b0c1f7e0d/assets/c964a522-1c27-11ea-af09-3b2e6521927c.png" alt="">
                    <h2>Verify the Switch Supports SSH</h2>
                    <p>To enable SSH on a Catalyst 2960 switch, the switch must be using a version of the IOS software including cryptographic (encrypted) features and capabilities. Use the show version command on the switch to see which IOS the switch is currently running. An IOS filename that includes the combination “k9” supports cryptographic (encrypted) features and capabilities. The example shows the output of the show version command.</p>
                    <h4>S1# show version
                        <br>Cisco IOS Software, C2960 Software (C2960-LANBASEK9-M), Version 15.0(2)SE7, RELEASE SOFTWARE (fc1)</h4>
                    <h2>Configure SSH</h2>
                    <p>Before configuring SSH, the switch must be minimally configured with a unique hostname and the correct network connectivity settings.</p>
                    <div style="display: flex; gap: 10px;">
                        <button type="button" onclick="configureSSH(1)">Step 1</button>
                        <button type="button" onclick="configureSSH(2)">Step 2</button>
                        <button type="button" onclick="configureSSH(3)">Step 3</button>
                        <button type="button" onclick="configureSSH(4)">Step 4</button>
                        <button type="button" onclick="configureSSH(5)">Step 5</button>
                        <button type="button" onclick="configureSSH(6)">Step 6</button>
                    </div>
                    <p class="subcontent" id="ssh"></p>
                    <h2>Verify SSH is Operational</h2>
                    <p>On a PC, an SSH client such as PuTTY, is used to connect to an SSH server. For example, assume the following is configured:</p>
                    <ul>
                        <li>SSH is enabled on switch S1</li>
                        <li>Interface VLAN 99 (SVI) with IPv4 address 172.17.99.11 on switch S1</li>
                        <li>PC1 with IPv4 address 172.17.99.21</li>
                    </ul>
                    <p>The figure shows the PuTTY settings for PC1 to initiate an SSH connection to the SVI VLAN IPv4 address of S1.</p>
                    <img src="https://contenthub.netacad.com/courses/srwe-dl/af9ea780-34fe-11eb-b1b2-9b1b0c1f7e0d/afb58ae5-34fe-11eb-b1b2-9b1b0c1f7e0d/assets/c96875b0-1c27-11ea-af09-3b2e6521927c.png" alt="">
                    <p>When connected, the user is prompted for a username and password as shown in the example. Using the configuration from the previous example, the username admin and password ccna are entered. After entering the correct combination, the user is connected via SSH to the command line interface (CLI) on the Catalyst 2960 switch.</p>
                    <h4>Login as: admin
                        <br>Using keyboard-interactive
                        <br>Authentication.
                        <br>Password:
                        <br>S1> enable
                        <br>Password: 
                        <br>S1#</h4>
                    <p>To display the version and configuration data for SSH on the device that you configured as an SSH server, use the show ip ssh command. In the example, SSH version 2 is enabled.</p>
                    <h4>
                        S1# show ip ssh
                        <br>SSH Enabled - version 2.0
                        <br>Authentication timeout: 120 secs; Authentication retries: 3
                        <br>To check the SSH connections to the device, use the show ssh command as shown.
                        <br>S1# show ssh
                        <br>%No SSHv1 server connections running.
                        <br>Connection Version Mode Encryption  Hmac                State          Username
                        <br>0          2.0     IN   aes256-cbc  hmac-sha1    Session started       admin
                        <br>0          2.0     OUT  aes256-cbc  hmac-sha1    Session started       admin
                        <br>S1#
                    </h4>
                    <h1>Basic Router Configuration</h1>
                    <h2>Configure Basic Router Settings</h2>
                    <p>Up to now, this module has only covered switches. If you want devices to be able to send and receive data outside of your network, you will have to configure routers. This topic teaches you basic router configuration and provides two Syntax Checkers and a Packet Tracer activity so you can practice these skills. <br>
                        Cisco routers and Cisco switches have many similarities. They support a similar modal operating system, similar command structures, and many of the same commands. In addition, both devices have similar initial configuration steps. For example, the following configuration tasks should always be performed. Name the device to distinguish it from other routers and configure passwords, as shown in the example.</p>
                    <h4>Router# configure terminal
                        <br>Enter configuration commands, one per line.  End with CNTL/Z.
                        <br>Router(config)# hostname R1
                        <br>R1(config)# enable secret class
                        <br>R1(config)# line console 0
                        <br>R1(config-line)# password cisco
                        <br>R1(config-line)# login
                        <br>R1(config-line)# exit
                        <br>R1(config)# line vty 0 4
                        <br>R1(config-line)# password cisco
                        <br>R1(config-line)# login
                        <br>R1(config-line)# exit
                        <br>R1(config)# service password-encryption
                        <br>R1(config)#</h4>
                    <p>Configure a banner to provide legal notification of unauthorized access, as shown in the example.</p>
                    <h4>R1(config)# banner motd #Authorized Access Only!#
                        <br>R1(config)#</h4>
                    <p>Save the changes on a router, as shown in the example.</p>
                    <h4>R1# copy running-config startup-config
                        <br>Destination filename [startup-config]? 
                        <br>Building configuration...
                        <br>[OK]</h4>
                    <h2>Dual Stack Topology</h2>
                    <p>One distinguishing feature between switches and routers is the type of interfaces supported by each. For example, Layer 2 switches support LANs; therefore, they have multiple FastEthernet or Gigabit Ethernet ports. The dual stack topology in the figure is used to demonstrate the configuration of router IPv4 and IPv6 interfaces.

                        dual stack network topology consisting of multiple hosts, switches, and routers with interfaces configured with both IPv4 and IPv6 addresses
                        
                        </p>
                    <img src="https://i.pinimg.com/1200x/05/c5/97/05c5974e3ee0f745d9970165609ab062.jpg" alt="">
                    <h2>Configure Router Interfaces</h2>
                    <p>Routers support LANs and WANs and can interconnect different types of networks; therefore, they support many types of interfaces. For example, G2 ISRs have one or two integrated Gigabit Ethernet interfaces and High-Speed WAN Interface Card (HWIC) slots to accommodate other types of network interfaces, including serial, DSL, and cable interfaces.

                      <br>  To be available, an interface must be:</p>
                      <ul>
                        <li>Configured with at least one IP address - Use the ip address ip-address subnet-mask and the ipv6 address ipv6-address/prefix interface configuration commands.</li>
                        <li>Activated - By default, LAN and WAN interfaces are not activated (shutdown). To enable an interface, it must be activated using the no shutdown command. (This is similar to powering on the interface.) The interface must also be connected to another device (a hub, a switch, or another router) for the physical layer to be active. </li>
                        <li>Description - Optionally, the interface could also be configured with a short description of up to 240 characters. It is good practice to configure a description on each interface. On production networks, the benefits of interface descriptions are quickly realized as they are helpful in troubleshooting and in identifying a third-party connection and contact information.</li>
                      </ul>
                      <p>The following example shows the configuration for the interfaces on R1.</p>
                      <h4>
                        R1(config)# interface gigabitethernet 0/0/0
                        <br>R1(config-if)# ip address 192.168.10.1 255.255.255.0 
                        <br>R1(config-if)# ipv6 address 2001:db8:acad:1::1/64 
                        <br>R1(config-if)# description Link to LAN 1
                        <br>R1(config-if)# no shutdown
                        <br>R1(config-if)# exit
                        <br>R1(config)# interface gigabitethernet 0/0/1
                        <br>R1(config-if)# ip address 192.168.11.1 255.255.255.0 
                        <br>R1(config-if)# ipv6 address 2001:db8:acad:2::1/64 
                        <br>R1(config-if)# description Link to LAN 2
                        <br>R1(config-if)# no shutdown
                        <br>R1(config-if)# exit
                        <br>R1(config)# interface serial 0/0/0
                        <br>R1(config-if)# ip address 209.165.200.225 255.255.255.252 
                        <br>R1(config-if)# ipv6 address 2001:db8:acad:3::225/64 
                        <br>R1(config-if)# description Link to R2
                        <br>R1(config-if)# no shutdown
                        <br>R1(config-if)# exit
                        <br>R1(config)#
                      </h4>
                      <h2>IPv4 Loopback Interfaces</h2>
                      <p>Another common configuration of Cisco IOS routers is enabling a loopback interface.

                        <br><br>The loopback interface is a logical interface that is internal to the router. It is not assigned to a physical port and can never be connected to any other device. It is considered a software interface that is automatically placed in an “up” state, as long as the router is functioning.
                        
                        <br><br>The loopback interface is useful in testing and managing a Cisco IOS device because it ensures that at least one interface will always be available. For example, it can be used for testing purposes, such as testing internal routing processes, by emulating networks behind the router.
                        
                        <br><br>Loopback interfaces are also commonly used in lab environments to create additional interfaces. For example, you can create multiple loopback interfaces on a router to simulate more networks for configuration practice and testing purposes. In this curriculum, we often use a loopback interface to simulate a link to the internet.
                        
                        <br><br>Enabling and assigning a loopback address is simple:</p>
                        <h4>Router(config)# interface loopback number </h4>
                        <h4>Router(config-if)# ip address ip-address subnet-mask </h4>
                        <p>Multiple loopback interfaces can be enabled on a router. The IPv4 address for each loopback interface must be unique and unused by any other interface, as shown in the example configuration of loopback interface 0 on R1.</p>
                        <h4>R1(config)# interface loopback 0
                            <br>R1(config-if)# ip address 10.0.0.1 255.255.255.0
                            <br>R1(config-if)# exit
                            <br>R1(config)#
                            <br>%LINEPROTO-5-UPDOWN: Line protocol on Interface Loopback0, changed state to up</h4>
                        <h1>Verify Directly Connected Networks</h1>
                        <h2>Interface Verification Commands</h2>
                        <p>There is no point in configuring your router unless you verify the configuration and connectivity. This topic covers the commands to use to verify directly connected networks. It includes two Syntax Checkers and a Packet Tracer.

                            <br>There are several show commands that can be used to verify the operation and configuration of an interface. The topology in the figure is used to demonstrate the verification of router interface settings.
                            
                            </p>
                        <img src="https://i.pinimg.com/736x/2c/be/a0/2cbea00a35c6a26b70d3cadacd4e9284.jpg" alt="">
                        <p>The following commands are especially useful to quickly identify the status of an interface:</p>
                        <ul>
                            <li>show ip interface brief and show ipv6 interface brief - These display a summary for all interfaces including the IPv4 or IPv6 address of the interface and current operational status.</li>
                            <li>show running-config interface interface-id - This displays the commands applied to the specified interface. </li>
                            <li>show ip route and show ipv6 route - These display the contents of the IPv4 or IPv6 routing table stored in RAM. In Cisco IOS 15, active interfaces should appear in the routing table with two related entries identified by the code ‘C’ (Connected) or ‘L’ (Local). In previous IOS versions, only a single entry with the code ‘C’ will appear.</li>
                        </ul>
                        <h2>Verify Interface Status</h2>
                        <p>The output of the show ip interface brief and show ipv6 interface brief commands can be used to quickly reveal the status of all interfaces on the router. You can verify that the interfaces are active and operational as indicated by the Status of “up” and Protocol of “up”, as shown in the example. A different output would indicate a problem with either the configuration or the cabling.</p>
                        <h4>
                            R1# show ip interface brief
                            <br>Interface              IP-Address      OK? Method Status                Protocol
                            <br>GigabitEthernet0/0/0   192.168.10.1    YES manual up                    up
                            <br>GigabitEthernet0/0/1   192.168.11.1    YES manual up                    up
                            <br>Serial0/1/0            209.165.200.225 YES manual up                    up
                            <br>Serial0/1/1            unassigned      YES unset  administratively down down
                            <br>R1# show ipv6 interface brief
                            <br>GigabitEthernet0/0/0   [up/up]
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FE80::7279:B3FF:FE92:3130
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2001:DB8:ACAD:1::1
                            <br>GigabitEthernet0/0/1   [up/up]
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FE80::7279:B3FF:FE92:3131
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2001:DB8:ACAD:2::1
                            <br>Serial0/1/0            [up/up]
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FE80::7279:B3FF:FE92:3130
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2001:DB8:ACAD:3::1
                            <br>Serial0/1/1            [down/down]     Unassigned
                        </h4>
                        <h2>Verify IPv6 Link Local and Multicast Addresses</h2>
                        <p>The output of the show ipv6 interface brief command displays two configured IPv6 addresses per interface. One address is the IPv6 global unicast address that was manually entered. The other address, which begins with FE80, is the link-local unicast address for the interface. A link-local address is automatically added to an interface whenever a global unicast address is assigned. An IPv6 network interface is required to have a link-local address, but not necessarily a global unicast address.

                            <br>The show ipv6 interface gigabitethernet 0/0/0 command displays the interface status and all of the IPv6 addresses belonging to the interface. Along with the link local address and global unicast address, the output includes the multicast addresses assigned to the interface, beginning with prefix FF02, as shown in the example.</p>
                        <h4>
                            R1# show ipv6 interface gigabitethernet 0/0/0
                        <br>GigabitEthernet0/0/0 is up, line protocol is up
                              <br>&nbsp;&nbsp;IPv6 is enabled, link-local address is FE80::7279:B3FF:FE92:3130
                              <br>&nbsp;&nbsp;No Virtual link-local address(es):
                              <br>&nbsp;&nbsp;Global unicast address(es):
                              <br>&nbsp;&nbsp;&nbsp;&nbsp;2001:DB8:ACAD:1::1, subnet is 2001:DB8:ACAD:1::/64
                              <br>&nbsp;&nbsp;Joined group address(es):
                              <br>&nbsp;&nbsp;&nbsp;&nbsp;FF02::1
                              <br>&nbsp;&nbsp;&nbsp;&nbsp; FF02::1:FF00:1
                              <br>&nbsp;&nbsp;&nbsp;&nbsp;FF02::1:FF92:3130
                              <br>&nbsp;&nbsp;MTU is 1500 bytes
                              <br>&nbsp;&nbsp;ICMP error messages limited to one every 100 milliseconds
                              <br>&nbsp;&nbsp;ICMP redirects are enabled
                              <br>&nbsp;&nbsp;ICMP unreachables are sent
                              <br>&nbsp;&nbsp;ND DAD is enabled, number of DAD attempts: 1
                              <br>&nbsp;&nbsp;ND reachable time is 30000 milliseconds (using 30000)
                              <br>&nbsp;&nbsp;ND advertised reachable time is 0 (unspecified)
                              <br>&nbsp;&nbsp;ND advertised retransmit interval is 0 (unspecified)
                              <br>&nbsp;&nbsp;ND router advertisements are sent every 200 seconds
                              <br>&nbsp;&nbsp;ND router advertisements live for 1800 seconds
                              <br>&nbsp;&nbsp;ND advertised default router preference is Medium
                            </h4>
                            <h2>Verify Interface Configuration</h2>
                            <p>The output of the show running-config interface command displays the current commands applied to the specified interface as shown.</p>
                            <h4>
                                R1 show running-config interface gigabitethernet 0/0/0
                                <br>Building configuration...
                                <br>Current configuration : 158 bytes
                                <br>!
                                <br>interface GigabitEthernet0/0/0
                                <br>&nbsp;&nbsp;description Link to LAN 1
                                <br>&nbsp;&nbsp;ip address 192.168.10.1 255.255.255.0
                                <br>&nbsp;&nbsp;negotiation auto
                                <br>&nbsp;&nbsp;ipv6 address 2001:DB8:ACAD:1::1/64
                                <br>end
                                <br>R1#
                            </h4>
                            <p>The following two commands are used to gather more detailed interface information:</p>
                            <ul>
                                <li>show interfaces- Displays interface information and packet flow count for all interfaces on the device.</li>
                                <li>show ip interface and show ipv6 interface - Displays the IPv4 and IPv6 related information for all interfaces on a router.</li>
                            </ul>
                            <h2>Verify Routes</h2>
                            <p>The output of the show ip route and show ipv6 route commands reveal the three directly connected network entries and the three local host route interface entries, as shown in the example. The local host route has an administrative distance of 0. It also has a /32 mask for IPv4, and a /128 mask for IPv6. The local host route is for routes on the router that owns the IP address. It is used to allow the router to process packets destined to that IP.</p>
                            <h4>
                                R1# show ip route
                                <br>Codes: L - local, C - connected, S - static, R - RIP, M - mobile, B - BGP
                                    
                                <br><br>Gateway of last resort is not set
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;192.168.10.0/24 is variably subnetted, 2 subnets, 2 masks
                                <br>C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;192.168.10.0/24 is directly connected, GigabitEthernet0/0/0
                                <br>L&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;192.168.10.1/32 is directly connected, GigabitEthernet0/0/0
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;192.168.11.0/24 is variably subnetted, 2 subnets, 2 masks
                                <br>C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;192.168.11.0/24 is directly connected, GigabitEthernet0/0/1
                                <br>L&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;192.168.11.1/32 is directly connected, GigabitEthernet0/0/1
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;209.165.200.0/24 is variably subnetted, 2 subnets, 2 masks
                                <br>C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;209.165.200.224/30 is directly connected, Serial0/1/0
                                <br>L&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;209.165.200.225/32 is directly connected, Serial0/1/0
                                <br>R1# show ipv6 route
                                <br>IPv6 Routing Table - default - 7 entries
                                <br>Codes: C - Connected, L - Local, S - Static, U - Per-user Static route
                                    
                                <br>C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2001:DB8:ACAD:1::/64 [0/0]
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;via GigabitEthernet0/0/0, directly connected
                                <br>L&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2001:DB8:ACAD:1::1/128 [0/0]
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;via GigabitEthernet0/0/0, receive
                                <br>C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2001:DB8:ACAD:2::/64 [0/0]
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;via GigabitEthernet0/0/1, directly connected
                                <br>L&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2001:DB8:ACAD:2::1/128 [0/0]
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;via GigabitEthernet0/0/1, receive
                                <br>C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2001:DB8:ACAD:3::/64 [0/0]
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;via Serial0/1/0, directly connected
                                <br>L&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2001:DB8:ACAD:3::1/128 [0/0]
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;via Serial0/1/0, receive
                                <br>L&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FF00::/8 [0/0]
                                <br>&nbsp;&nbsp;&nbsp;&nbsp;via Null0, receive
                                <br>R1#
                            </h4>
                            <p>A ‘C’ next to a route within the routing table indicates that this is a directly connected network. When the router interface is configured with a global unicast address and is in the “up/up” state, the IPv6 prefix and prefix length are added to the IPv6 routing table as a connected route.

                                <br>The IPv6 global unicast address applied to the interface is also installed in the routing table as a local route. The local route has a /128 prefix. Local routes are used by the routing table to efficiently process packets with the interface address of the router as the destination.
                                
                                <br>The ping command for IPv6 is identical to the command used with IPv4 except that an IPv6 address is used. As shown in the example, the ping command is used to verify Layer 3 connectivity between R1 and PC1.</p>
                            <h4>R1# ping 2001:db8:acad:1::10
                                <br>Type escape sequence to abort.
                                <br>Sending 5, 100-byte ICMP Echos to 2001:DB8:ACAD:1::10, timeout is 2 seconds:
                                <br>!!!!!
                                <br>Success rate is 100 percent (5/5), round-trip min/avg/max = 1/1/1 ms</h4>
                            <h2>Filter Show Command Output</h2>
                            <p>Commands that generate multiple screens of output are, by default, paused after 24 lines. At the end of the paused output, the --More-- text displays. Pressing Enter displays the next line and pressing the spacebar displays the next set of lines. Use the terminal length command to specify the number of lines to be displayed. A value of 0 (zero) prevents the router from pausing between screens of output.
                               <br><br> Another very useful feature that improves the user experience in the CLI is the filtering of show output. Filtering commands can be used to display specific sections of output. To enable the filtering command, enter a pipe (|) character after the show command and then enter a filtering parameter and a filtering expression.
                               <br><br> There are four filtering parameters that can be configured after the pipe.</p>
                            <div style="display: flex; gap: 10px;">
                                <button type="button" onclick="filterShow(1)">section</button>
                                <button type="button" onclick="filterShow(2)">include</button>
                                <button type="button" onclick="filterShow(3)">exclude</button>
                                <button type="button" onclick="filterShow(4)">begin</button>
                            </div>
                            <p class="subcontent" id="filter"></p>
                            <h2>Command History Feature</h2>
                            <p>The command history feature is useful because it temporarily stores the list of executed commands to be recalled.

                                <br><br>To recall commands in the history buffer, press Ctrl+P or the Up Arrow key. The command output begins with the most recent command. Repeat the key sequence to recall successively older commands. To return to more recent commands in the history buffer, press Ctrl+N or the Down Arrow key. Repeat the key sequence to recall successively more recent commands.
                                
                                <br><br>By default, command history is enabled and the system captures the last 10 command lines in its history buffer. Use the show history privileged EXEC command to display the contents of the buffer.
                                
                                <br><br>It is also practical to increase the number of command lines that the history buffer records during the current terminal session only. Use the terminal history size user EXEC command to increase or decrease the size of the buffer.
                                
                                <br><br>An example of the terminal history size and show history commands is shown in the figure.</p>
                            <h4>
                                R1# terminal history size 200
                                <br>R1# show history
                                <br>&nbsp;&nbsp;show ip int brief
                                <br>&nbsp;&nbsp;show interface g0/0/0
                                <br>&nbsp;&nbsp;show ip route
                                <br>&nbsp;&nbsp;show running-config
                                <br>&nbsp;&nbsp;show history
                                <br>&nbsp;&nbsp;terminal history size 200
                            </h4>
                        </div>
    `,
    2: `<h1>Introduction</h1>
        <h2>Why should I take this module?</h2>
        <p>Welcome to Switching Concepts! <br><br>

            You can connect and configure switches, that’s great! But even a network with the newest technology develops 
            its own problems eventually. If you have to troubleshoot your network, you need to know how switches work. 
            This module gives you the fundamentals of switches and switch operation. Luckily, switch operation is easy to understand!</p>
        <h2>What will I learn to do in this module?</h2>
        <p>Module Title: Switching Concepts <br><br>
            Module Objective: Explain how Layer 2 switches forward data.</p>
            <table>
                <tr>
                    <th>Topic Title</th>
                    <th>Topic Objective</th>
                </tr>
                <tr>
                    <td>Frame Forwarding</td>
                    <td>Explain how frames are forwarded in a switched network.</td>
                </tr>
                <tr>
                    <td>Switching Domains</td>
                    <td>Compare a collision domain to a broadcast domain.</td>
                </tr>
            </table>
        <h1>Frame Forwarding</h1>
        <h2>Switching in Networking</h2>
        <p>
            The concept of switching and forwarding frames is universal in networking and telecommunications. Various types of switches are used in LANs, WANs, and in the public switched telephone network (PSTN).
            <br><br>The decision on how a switch forwards traffic is made based on the flow of that traffic. There are two terms associated with frames entering and leaving an interface:
            <ul>
                <li> Ingress - This is used to describe the port where a frame enters the device.</li>
                <li> Egress - This is used to describe the port that frames will use when leaving the device.</li>
            </ul>
            A LAN switch maintains a table that is referenced when forwarding traffic through the switch. The only intelligence of a LAN switch is its ability to use its table to forward traffic. A LAN switch forwards traffic based on the ingress port and the destination MAC address of an Ethernet frame. With a LAN switch, there is only one master switching table that describes a strict association between MAC addresses and ports; therefore, an Ethernet frame with a given destination address always exits the same egress port, regardless of the ingress port it enters.
            <br><br>Note: An Ethernet frame will never be forwarded out the same port it was on which it was received.
            
        </p>
        <h1>Video</h1>
        <h2>The Switch MAC Address Table</h2>
        <p>A switch is made up of integrated circuits and the accompanying software that controls the data paths through the switch. Switches use destination MAC addresses to direct network communications through the switch, out the appropriate port, toward the destination.
            <br><br>For a switch to know which port to use to transmit a frame, it must first learn which devices exist on each port. As the switch learns the relationship of ports to devices, it builds a table called a MAC address table. This table is stored in content addressable memory (CAM) which is a special type of memory used in high-speed searching applications. For this reason, the MAC address table is sometimes also called the CAM table.
            <br><br>LAN switches determine how to handle incoming data frames by maintaining the MAC address table. A switch populates its MAC address table by recording the source MAC address of each device connected to each of its ports. The switch references the information in the MAC address table to send frames destined for a specific device out of the port which has been assigned to that device.</p>
        <h2>The Switch Learn and Forward Method</h2>
        <p>
            The following two-step process is performed on every Ethernet frame that enters a switch.
            <br><br>
            Step 1. Learn - Examining the Source MAC Address
            <br><br>
            Every frame that enters a switch is checked for new information to learn. It does this by examining the source MAC address of the frame and port number where the frame entered the switch:
            <br><br>
            <ul>
                <li>If the source MAC address does not exist in the MAC address table, the MAC address and incoming port number are added to the table.</li>
                <li>If the source MAC address does exist, the switch updates the refresh timer for that entry. By default, most Ethernet switches keep an entry in the table for five minutes. If the source MAC address does exist in the table but on a different port, the switch treats this as a new entry. The entry is replaced using the same MAC address, but with the more current port number.</li>
            </ul>
            Step 2. Forward - Examining the Destination MAC Address
            <br><br>
            If the destination MAC address is a unicast address, the switch will look for a match between the destination MAC address of the frame and an entry in its MAC address table:
            <br><br>
            <ul>
                <li>If the destination MAC address is in the table, it will forward the frame out of the specified port.</li>
                <li>If the destination MAC address is not in the table, the switch will forward the frame out all ports except the incoming port. This is called an unknown unicast. If the destination MAC address is a broadcast or a multicast, the frame is also flooded out all ports except the incoming port.</li>
            </ul>
        </p>
        <h2>Switching Forwarding Methods</h2>
        <p>
            Switches make Layer 2 forwarding decisions very quickly. This is because of software on application-specific-integrated circuits (ASICs). ASICs reduce the frame-handling time within the device and allow the device to manage an increased number of frames without degrading performance.
            <br><br>
            Layer 2 switches use one of two methods to switch frames:
            <br><br>
            <ul>
                <li>Store-and-forward switching - This method makes a forwarding decision on a frame after it has received the entire frame and checked the frame for errors using a mathematical error-checking mechanism known as a cyclic redundancy check (CRC). Store-and-forward switching is Cisco’s primary LAN switching method.</li>
                <li>Cut-through switching - This method begins the forwarding process after the destination MAC address of an incoming frame and the egress port have been determined.</li>
            </ul>
        </p>
        <h2>Store-and-Forward Switching</h2>
        <p>
            Store-and-forward switching, as distinguished from cut-through switching, has the following two primary characteristics:
            <br><br>
            <li>Error checking - After receiving the entire frame on the ingress port, the switch compares the frame check sequence (FCS) value in the last field of the datagram against its own FCS calculations. The FCS is an error checking process that helps to ensure that the frame is free of physical and data-link errors. If the frame is error-free, the switch forwards the frame. Otherwise, the frame is dropped.</li>
            <li>Automatic buffering - The ingress port buffering process used by store-and-forward switches provides the flexibility to support any mix of Ethernet speeds. For example, handling an incoming frame traveling into a 100 Mbps Ethernet port that must be sent out a 1 Gbps interface would require using the store-and-forward method. With any mismatch in speeds between the ingress and egress ports, the switch stores the entire frame in a buffer, computes the FCS check, forwards it to the egress port buffer and then sends it.</li>
            <br><br>The figure illustrates how store-and-forward makes a decision based on the Ethernet frame.
        </p>
        <img src="https://i.pinimg.com/736x/90/33/cc/9033ccc33208a9c825226f1961a566b8.jpg" alt="">
        <h2>Cut-Through Switching</h2>
        <p>
            The store-and-forward switching method drops frames that do not pass the FCS check. Therefore, it does not forward invalid frames.
            <br><br>
            By contrast, the cut-through switching method may forward invalid frames because no FCS check is performed. However, cut-through switching has the ability to perform rapid frame switching. This means the switch can make a forwarding decision as soon as it has looked up the destination MAC address of the frame in its MAC address table, as shown in the figure.    
        </p>
        <img src="https://i.pinimg.com/736x/06/09/e9/0609e9ed44a8ca2aecca70bff03765b3.jpg" alt="">
        <p>
            The switch does not have to wait for the rest of the frame to enter the ingress port before making its forwarding decision.
            <br><br>
            Fragment free switching is a modified form of cut-through switching in which the switch only starts forwarding the frame. Fragment free switching provides better error checking than cut-through, with practically no increase in latency.
            <br><br>
            The lower latency speed of cut-through switching makes it more appropriate for extremely demanding, high-performance computing (HPC) applications that require process-to-process latencies of 10 microseconds or less.
            <br><br>
            The cut-through switching method can forward frames with errors. If there is a high error rate (invalid frames) in the network, cut-through switching can have a negative impact on bandwidth, thereby clogging up bandwidth with damaged and invalid frames.
        </p>
        <h1>Collision and Broadcast Domains</h1>
        <p>
            In the previous topic, you gained a better understanding of what a switch is and how it operates. This topic discusses how switches work with each other and with other devices to eliminate collisions and reduce network congestion. The terms collisions and congestion are used here in the same way that you use them in street traffic.
            <br><br>
            In legacy hub-based Ethernet segments, network devices competed for the shared medium. The network segments that share the same bandwidth between devices are known as collision domains. When two or more devices within the same collision domain try to communicate at the same time, a collision will occur.
            <br><br>
            If an Ethernet switch port is operating in half-duplex, each segment is in its own collision domain. There are no collisions when switch ports are operating in full-duplex. However, there could be a collision domain if a switch port is operating in half-duplex.
            <br><br>
            By default, Ethernet switch ports will autonegotiate full-duplex when the adjacent device can also operate in full-duplex. If the switch port is connected to a device operating in half-duplex, such as a legacy hub, then the switch port will operate in half-duplex. In the case of half-duplex, the switch port will be part of a collision domain.
            <br><br>
            As shown in the figure, full-duplex is chosen if both devices have the capability along with their highest common bandwidth.
        </p>
        <img src="https://i.pinimg.com/736x/31/23/b4/3123b474ce959fc7d70623536b2c35b7.jpg" alt="">
        <h2>Broadcast Domains</h2>
        A collection of interconnected switches forms a single broadcast domain. Only a network layer device, such as a router, can divide a Layer 2 broadcast domain. Routers are used to segment broadcast domains, but will also segment a collision domain.
        <br><br>
        When a device sends a Layer 2 broadcast, the destination MAC address in the frame is set to all binary ones.
        <br><br>
        The Layer 2 broadcast domain is referred to as the MAC broadcast domain. The MAC broadcast domain consists of all devices on the LAN that receive broadcast frames from a host.
        <br><br>
        <h1>Video 2</h1>
        <p>
            When a switch receives a broadcast frame, it forwards the frame out each of its ports, except the ingress port where the broadcast frame was received. Each device connected to the switch receives a copy of the broadcast frame and processes it.
            <br><br>
            Broadcasts are sometimes necessary for initially locating other devices and network services, but they also reduce network efficiency. Network bandwidth is used to propagate the broadcast traffic. Too many broadcasts and a heavy traffic load on a network can result in congestion, which slows down network performance.
            <br><br>
            When two switches are connected together, the broadcast domain is increased, as seen in the second half of the animation. In this case, a broadcast frame is forwarded to all connected ports on switch S1. Switch S1 is connected to switch S2. The frame is then also propagated to all devices connected to switch S2.
        </p>
        <h2>Alleviate Network Congestion</h2>
        <p>
            LAN switches have special characteristics that help them alleviate network congestion. By default, interconnected switch ports attempt to establish a link in full-duplex, therefore eliminating collision domains. Each full-duplex port of the switch provides the full bandwidth to the device or devices that are connected to that port. Full-duplex connections have dramatically increased LAN network performance, and are required for 1 Gbps Ethernet speeds and higher.
            <br><br>
            Switches interconnect LAN segments, use a MAC address table to determine egress ports, and can lessen or eliminate collisions entirely. Characteristics of switches that alleviate network congestion include the following:
            <br><br>
            <ul>
                <li>Fast port speeds - Ethernet switch port speeds vary by model and purpose. For instance, most access layer switches support 100 Mbps and 1 Gbps port speeds. Distribution layer switches support 100 Mbps, 1 Gbps, and 10 Gbps port speeds and core layer and data center switches may support 100 Gbps, 40 Gbps, and 10 Gbps port speeds. Switches with faster port speeds cost more but can reduce congestion.</li>
                <li>Fast internal switching - Switches use a fast internal bus or shared memory to provide high performance.</li>
                <li>Large frame buffers - Switches use large memory buffers to temporarily store more received frames before having to start dropping them. This enables ingress traffic from a faster port (e.g., 1 Gbps) to be forwarded to a slower (e.g., 100 Mbps) egress port without losing frames.</li>
                <li>High port density - A high port density switch lowers overall costs because it reduces the number of switches required. For instance, if 96 access ports were required, it would be less expensive to buy two 48-port switches instead of four 24-port switches. High port density switches also help keep traffic local, which helps alleviate congestion.</li>
            </ul>
        </p>
        <div class="checking" style="display: block;">
            <p>1. Which port speed will be autonegotiated between a host with a 1 Gbps NIC connecting to a Cisco Catalyst 2960 switch with a 100 Mbps port?</p>
            <button style="width: 200px;">A. 10Mbps</button>
            <button style="width: 200px;">B. 100Mbps</button>
            <button style="width: 200px;">C. 1Gbps</button>
            <button style="width: 200px;">D. 10GGbps</button>
            <p>2. Which device separates broadcast domains?</p>
            <button style="width: 200px;">A. Access Point</button>
            <button style="width: 200px;">B. Hub</button>
            <button style="width: 200px;">C. Router</button>
            <button style="width: 200px;">D. Switch</button>
            <p>3. Which two special characteristics do LAN switches use to alleviate network congestion? (Choose two.)</p>
            <button style="width: 300px;">A. fast port speeds</button>
            <button style="width: 300px;">B. fast internal switching</button>
            <button style="width: 300px;">C. low port densities</button>
            <button style="width: 300px;">D. small fram buffers</button>
        </div>`,
      3: `
        <h1>Introduction</h1>
        <h2>Why should I take this module?</h2>
        <p>
            Welcome to VLANs!
            <br><br>
            Imagine that you are in charge of a very large conference. There are people from all over who share a common interest and some who also have special expertise. Imagine if each expert who wanted to present their information to a smaller audience had to do that in the same large room with all the other experts and their smaller audiences. Nobody would be able to hear anything. You would have to find separate rooms for all the experts and their smaller audiences. The Virtual LAN (VLAN) does something similar in a network. VLANs are created at Layer 2 to reducing or eliminate broadcast traffic. VLANs are how you break up your network into smaller networks, so that the devices and people within a single VLAN are communicating with each other and not having to manage traffic from other networks. The network administrator can organize VLANs by location, who is using them, the type of device, or whatever category is needed. You know you want to learn how to do this, so don’t wait!
        </p>
        <h2>What will I learn to do in this module?</h2>
        <table>
            <tr>
                <th>Table caption</th>
                <th>Topic Title</th>
            </tr>
            <tr>
                <td>Overview of VLANs</td>
                <td>Explain the purpose of VLANs in a switched network</td>
            </tr>
            <tr>
                <td>VLANs in a Multi-Switched Environment</td>
                <td>Explain how a switch forwards frames based on VLAN configuration in a multi-switch environment.</td>
            </tr>
            <tr>
                <td>VLAN Configuration</td>
                <td>	Configure a switch port to be assigned to a VLAN based on requirements.</td>
            </tr>
            <tr>
                <td>VLAN Trunks</td>
                <td>Configure a trunk port on a LAN switch.</td>
            </tr>
            <tr>
                <td>Dynamic Trunking Protocol</td>
                <td>Configure Dynamic Trunking Protocol (DTP).</td>
            </tr>
        </table>
        <h1>Overview of VLANs</h1>
        <h2>VLAN Definitions</h2>
        <p>
            Of course organizing your network into smaller networks is not as simple as separating screws and putting them into jars. But it will make your network easier to manage. Virtual LANs (VLANs) provide segmentation and organizational flexibility in a switched network. A group of devices within a VLAN communicate as if each device was attached to the same cable. VLANs are based on logical connections, instead of physical connections.
            <br><br>As shown in the figure, VLANs in a switched network enable users in various departments (i.e., IT, HR, and Sales) to connect to the same network regardless of the physical switch being used or location in a campus LAN.
        </p>
        <img src="https://i.pinimg.com/736x/30/86/34/308634588ad4c49084b01e586d01666e.jpg" alt="">
        <p>
            VLANs allow an administrator to segment networks based on factors such as function, team, or application, without regard for the physical location of the users or devices. Each VLAN is considered a separate logical network. Devices within a VLAN act as if they are in their own independent network, even if they share a common infrastructure with other VLANs. Any switch port can belong to a VLAN.
            <br><br>
            Unicast, broadcast, and multicast packets are forwarded and flooded only to end devices within the VLAN where the packets are sourced. Packets destined for devices that do not belong to the VLAN must be forwarded through a device that supports routing.
            <br><br>
            Multiple IP subnets can exist on a switched network, without the use of multiple VLANs. However, the devices will be in the same Layer 2 broadcast domain. This means that any Layer 2 broadcasts, such as an ARP request, will be received by all devices on the switched network, even by those not intended to receive the broadcast.
            <br><br>
            A VLAN creates a logical broadcast domain that can span multiple physical LAN segments. VLANs improve network performance by separating large broadcast domains into smaller ones. If a device in one VLAN sends a broadcast Ethernet frame, all devices in the VLAN receive the frame, but devices in other VLANs do not.
            <br><br>
            Using VLANs, network administrators can implement access and security policies according to specific groupings of users. Each switch port can be assigned to only one VLAN (except for a port connected to an IP phone or to another switch).
        </p>
        <h2>Benefits of a VLAN Design</h2>
        <p>Each VLAN in a switched network corresponds to an IP network. Therefore, VLAN design must take into consideration the implementation of a hierarchical network-addressing scheme. Hierarchical network addressing means that IP network numbers are applied to network segments or VLANs in a way that takes the network as a whole into consideration. Blocks of contiguous network addresses are reserved for and configured on devices in a specific area of the network, as shown in the figure.</p>
        <img src="https://i.pinimg.com/736x/12/82/6e/12826e015d0708b8206b67cac702f2d3.jpg" alt="">
        <p>The table lists the benefits of designing a network with VLANs.</p>
        <table>
            <tr>
                <th>Benefit</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Smaller broadcast domains</td>
                <td>
                    <ul>
                        <li>Dividing a network into VLANs reduces the number of devices in the broadcast domain.</li>
                        <li>In the figure, there are six computers in the network but only three broadcast domains (i.e., Faculty, Student, and Guest).</li>
                    </ul>
                </td>
            </tr>
            <tr>
                <td>Improved security</td>
                <td>
                    <ul>
                        <li>Only users in the same VLAN can communicate together.</li>
                        <li>Only users in the same VLAN can communicate without the services of a router. The router may have a security feature such as an access control list to restrict communications between VLANs.</li>
                    </ul>
                </td>
            </tr>
            <tr>
                <td>Improved IT efficiency</td>
                <td>
                    <ul>
                        <li>VLANs simplify network management because users with similar network requirements can be configured on the same VLAN.</li>
                        <li>VLANs can be named to make them easier to identify.</li>
                        <li>In the figure, VLAN 10 was named “Faculty”, VLAN 20 “Student”, and VLAN 30 “Guest.”</li>
                    </ul>
                </td>
            </tr>
            <tr>
                <td>Reduced cost</td>
                <td>VLANs reduce the need for expensive network upgrades and use the existing bandwidth and uplinks more efficiently, resulting in cost savings.</td>
            </tr>
            <tr>
                <td>Better performance</td>
                <td>Smaller broadcast domains reduce unnecessary traffic on the network and improve performance.</td>
            </tr>
            <tr>
                <td>Simpler project and application management</td>
                <td>
                    <ul>
                        <li>VLANs aggregate users and network devices to support business or geographic requirements.</li>
                        <li>Having separate functions makes managing a project or working with a specialized application easier; an example of such an application is an e-learning development platform for faculty.</li>
                    </ul>
                </td>
            </tr>
        </table>
        <h2>Types of VLANs</h2>
        <p>VLANs are used for different reasons in modern networks. Some VLAN types are defined by traffic classes. Other types of VLANs are defined by the specific function that they serve.</p>
        <button onclick="vlan(1)">Default VLAN</button>
        <button onclick="vlan(2)">Data VLAN</button>
        <button onclick="vlan(3)">Native VLAN</button>
        <button onclick="vlan(4)">Management VLAN</button>
        <button onclick="vlan(5)">Voice VLAN</button>
        <p id="vlan"></p>
        <h1>VLANs in a Multi-Switched Environment</h1>
        <h2>Defining VLAN Trunks</h2>
        <p>
            VLANs would not be very useful without VLAN trunks. VLAN trunks allow all VLAN traffic to propagate between switches. This enables devices connected to different switches but in the same VLAN to communicate without going through a router.
            <br><br>
            A trunk is a point-to-point link between two network devices that carries more than one VLAN. A VLAN trunk extends VLANs across an entire network. Cisco supports IEEE 802.1Q for coordinating trunks on Fast Ethernet, Gigabit Ethernet, and 10-Gigabit Ethernet interfaces.
            <br><br>
            A VLAN trunk does not belong to a specific VLAN. Instead, it is a conduit for multiple VLANs between switches and routers. A trunk could also be used between a network device and server or another device that is equipped with an appropriate 802.1Q-capable NIC. By default, on a Cisco Catalyst switch, all VLANs are supported on a trunk port.
            <br><br>
            In the figure, the highlighted links between switches S1 and S2, and S1 and S3 are configured to transmit traffic coming from VLANs 10, 20, 30, and 99 (i.e., native VLAN) across the network. This network could not function without VLAN trunks.
        </p>
        <img src="https://i.pinimg.com/1200x/f9/80/e1/f980e1baa777c3994fc86d7e222e9149.jpg" alt="">
        <h2>Network without VLANs</h2>
        <p>
            When a switch receives a broadcast frame on one of its ports, it forwards the frame out all other ports except the port where the broadcast was received. In the animation, the entire network is configured in the same subnet (172.17.40.0/24) and no VLANs are configured. As a result, when the faculty computer (PC1) sends out a broadcast frame, switch S2 sends that broadcast frame out all of its ports. Eventually the entire network receives the broadcast because the network is one broadcast domain.
        </p>
        <img src="https://i.pinimg.com/736x/23/b8/46/23b846477f8f9f094a3f1462d69fe1b7.jpg" alt="">
        <img src="https://i.pinimg.com/736x/d6/88/58/d68858a333d47d5aa1b60fbbe9727344.jpg" alt="">
        <img src="https://i.pinimg.com/736x/8e/62/b3/8e62b3d218c3c54bf0f49566b1087cb6.jpg" alt="">
        <img src="https://i.pinimg.com/736x/72/e8/3a/72e83ae1048ba5b5974359873dce470a.jpg" alt="">
        <img src="https://i.pinimg.com/736x/03/71/85/037185fd0fb5830020654196d18b9008.jpg" alt="">
        <h2>Network with VLANs</h2>
        <p>
            VLANs are associated with and configured on individual switch ports. Devices attached to those ports have no concept of VLANs. However, these devices are configured with IP addressing and are members of a specific IP network. This is where the connection between VLAN and IP network is apparent. A VLAN is the equivalent to an IP network (or subnet). VLANs are configured on the switch, whereas IP addressing is configured on the device.
            <br><br>
            Click Play in the animation to see that the same network has now been segmented using two VLANs. Faculty devices are assigned to VLAN 10 and student devices are assigned to VLAN 20. When a broadcast frame is sent from the faculty computer, PC1, to switch S2, the switch forwards that broadcast frame only to those switch ports configured to support VLAN 10.
        </p>
        <img src="https://i.pinimg.com/736x/6d/14/24/6d142459c295e1d43767a8bc5066442d.jpg" alt="">
        <img src="https://i.pinimg.com/736x/ee/4e/07/ee4e07951143ef29c6d71eef9156876b.jpg" alt="">
        <img src="https://i.pinimg.com/736x/31/41/f1/3141f11e0ef45d3a78982b15661a0759.jpg" alt="">
        <img src="https://i.pinimg.com/736x/9a/b0/f3/9ab0f39f991b042433111c15509e8312.jpg" alt="">
        <img src="https://i.pinimg.com/736x/7b/5c/1b/7b5c1ba7863f7bed11f0fd91631590d1.jpg" alt="">
        <p>
            The ports that comprise the connection between switches S2 and S1 (ports F0/1), and between S1 and S3 (ports F0/3) are trunks and have been configured to support all the VLANs in the network.
            <br><br>
            When S1 receives the broadcast frame on port F0/1, S1 forwards that broadcast frame out of the only other port configured to support VLAN 10, which is port F0/3. When S3 receives the broadcast frame on port F0/3, it forwards that broadcast frame out the only other port configured to support VLAN 10, which is port F0/11. The broadcast frame arrives at the only other computer in the network configured in VLAN 10, which is faculty computer PC4.
            <br><br>
            When VLANs are implemented on a switch, the transmission of unicast, multicast, and broadcast traffic from a host in a particular VLAN are restricted to the devices that are in that VLAN.
        </p>
        <h2>VLAN Identification with a Tag</h2>
        <p>
            The standard Ethernet frame header does not contain information about the VLAN to which the frame belongs. Therefore, when Ethernet frames are placed on a trunk, information about the VLANs to which they belong must be added. This process, called tagging, is accomplished by using the IEEE 802.1Q header, specified in the IEEE 802.1Q standard. The 802.1Q header includes a 4-byte tag inserted within the original Ethernet frame header, specifying the VLAN to which the frame belongs.
            <br><br>
            When the switch receives a frame on a port configured in access mode and assigned a VLAN, the switch inserts a VLAN tag in the frame header, recalculates the Frame Check Sequence (FCS), and sends the tagged frame out of a trunk port.
            <h3>VLAN Tag Field Details</h3>
            <p>As shown in the figure, the VLAN tag control information field consists of a Type field, a Priority field, a Canonical Format Identifier field, and VLAN ID field:</p>
            <ul>
                <li>Type - A 2-byte value called the tag protocol ID (TPID) value. For Ethernet, it is set to hexadecimal 0x8100.</li>
                <li>User priority - A 3-bit value that supports level or service implementation.</li>
                <li>Canonical Format Identifier (CFI) - A 1-bit identifier that enables Token Ring frames to be carried across Ethernet links.</li>
                <li>VLAN ID (VID) - A 12-bit VLAN identification number that supports up to 4096 VLAN IDs.</li>
            </ul>
           
        </p>
        <p> After the switch inserts the tag control information fields, it recalculates the FCS values and inserts the new FCS into the frame.</p>
        <img src="https://i.pinimg.com/736x/58/c5/10/58c510c1cc968d2deb3f8f5514814bb7.jpg" alt="">
        <h2>Native VLANs and 802.1Q Tagging</h2>
        <p>
            The IEEE 802.1Q standard specifies a native VLAN for trunk links, which defaults to VLAN 1. When an untagged frame arrives on a trunk port it is assigned to the native VLAN. Management frames that are sent between switches is an example of traffic that is typically untagged. If the link between two switches is a trunk, the switch sends the untagged traffic on the native VLAN.
            <br><br>
            <b>Tagged Frames on the Native VLAN</b>
            <br><br>
            Some devices that support trunking add a VLAN tag to native VLAN traffic. Control traffic sent on the native VLAN should not be tagged. If an 802.1Q trunk port receives a tagged frame with the VLAN ID that is the same as the native VLAN, it drops the frame. Consequently, when configuring a switch port on a Cisco switch, configure devices so that they do not send tagged frames on the native VLAN. Devices from other vendors that support tagged frames on the native VLAN include IP phones, servers, routers, and non-Cisco switches.
            <br><br>
            <b>Untagged Frames on the Native VLAN</b>
            <br><br>
            When a Cisco switch trunk port receives untagged frames (which are unusual in a well-designed network), it forwards those frames to the native VLAN. If there are no devices associated with the native VLAN (which is not unusual) and there are no other trunk ports (which is not unusual), then the frame is dropped. The default native VLAN is VLAN 1. When configuring an 802.1Q trunk port, a default Port VLAN ID (PVID) is assigned the value of the native VLAN ID. All untagged traffic coming in or out of the 802.1Q port is forwarded based on the PVID value. For example, if VLAN 99 is configured as the native VLAN, the PVID is 99 and all untagged traffic is forwarded to VLAN 99. If the native VLAN has not been reconfigured, the PVID value is set to VLAN 1.
            <br><br>
            In the figure, PC1 is connected by a hub to an 802.1Q trunk link.
        </p>
        <img src="https://i.pinimg.com/736x/ed/23/fb/ed23fb8cf01c90a74b7ee5096f654a18.jpg" alt="">
        <p>PC1 sends untagged traffic, which the switches associate with the native VLAN configured on the trunk ports, and forward accordingly. Tagged traffic on the trunk received by PC1 is dropped. This scenario reflects poor network design for several reasons: it uses a hub, it has a host connected to a trunk link, and it implies that the switches have access ports assigned to the native VLAN. It also illustrates the motivation for the IEEE 802.1Q specification for native VLANs as a means of handling legacy scenarios.</p>
        <h2>Voice VLAN Tagging</h2>
        <p>A separate voice VLAN is required to support VoIP. This enables quality of service (QoS) and security policies to be applied to voice traffic.
            <br><br>
            A Cisco IP phone connects directly to a switch port. An IP host can connect to the IP phone to gain network connectivity as well. The access port connected to the Cisco IP phone can be configured to use two separate VLANs. One VLAN is for voice traffic and the other is a data VLAN to support the host traffic. The link between the switch and the IP phone simulates a trunk link to carry both voice VLAN traffic and data VLAN traffic.
            <br><br>
            Specifically, the Cisco IP Phone contains an integrated three-port 10/100 switch. The ports provide dedicated connections to the following devices:
            <ul>
                <li>Port 1 connects to the switch or other VoIP device.</li>
                <li> Port 2 is an internal 10/100 interface that carries the IP phone traffic.</li>
                <li>Port 3 (access port) connects to a PC or other device.</li>
            </ul>
            The switch access port sends CDP packets instructing the attached IP phone to send voice traffic in one of three ways. The method used varies based on the type of traffic:
            <ul>
                <li>Voice VLAN traffic must be tagged with an appropriate Layer 2 class of service (CoS) priority value</li>
                <li>Access VLAN traffic can also be tagged with a Layer 2 CoS priority value</li>
                <li>Access VLAN is not tagged (no Layer 2 CoS priority value)</li>
            </ul>
            In the figure, the student computer PC5 is attached to a Cisco IP phone, and the phone is attached to switch S3. VLAN 150 is designed to carry voice traffic, while PC5 is in VLAN 20, which is used for student data.</p>
            <img src="https://i.pinimg.com/736x/05/84/d2/0584d2bf4500571517a21ad32940bbe0.jpg" alt="">
            <h2>Voice VLAN Verification Example</h2>
            <p>The example output for the show interface fa0/18 switchport command is shown. The highlighted areas in the sample output show the F0/18 interface configured with a VLAN that is configured for data (VLAN 20), and a VLAN configured for voice (VLAN 150).</p>
            <h4>
                S1# show interfaces fa0/18 switchport  
                <br>Name: Fa0/18
                <br>Switchport: Enabled
                <br>Administrative Mode: static access
                <br>Operational Mode: static access
                <br>Administrative Trunking Encapsulation: negotiate
                <br>Operational Trunking Encapsulation: native
                <br>Negotiation of Trunking: Off
                <br>Access Mode VLAN: 20 (student) 
                <br>Trunking Native Mode VLAN: 1 (default)
                <br>Administrative Native VLAN tagging: enabled
                <br>Voice VLAN: 150 (voice) 
            </h4>
            <h1>VLAN Configuration</h1>
            <h2>VLAN Ranges on Catalyst Switches</h2>
            <p>
                Creating VLANs, like most other aspects of networking, is a matter of entering the appropriate commands. This topic details how to configure and verify different types of VLANs.
                <br><br>
                Different Cisco Catalyst switches support various numbers of VLANs. The number of supported VLANs is large enough to accommodate the needs of most organizations. For example, the Catalyst 2960 and 3650 Series switches support over 4,000 VLANs. Normal range VLANs on these switches are numbered 1 to 1,005 and extended range VLANs are numbered 1,006 to 4,094. The figure illustrates the default VLANs on a Catalyst 2960 switch running Cisco IOS Release 15.x.
            </p>
            <pre>
    Switch# show vlan brief
    VLAN Name              Status   Ports
    ---- ----------------- -------  --------------------
    1    default           active   Fa0/1, Fa0/2, Fa0/3, Fa0/4
                                    Fa0/5, Fa0/6, Fa0/7, Fa0/8
                                    Fa0/9, Fa0/10, Fa0/11, Fa0/12
                                    Fa0/13, Fa0/14, Fa0/15, Fa0/16
                                    Fa0/17, Fa0/18, Fa0/19, Fa0/20
                                    Fa0/21, Fa0/22, Fa0/23, Fa0/24
                                    Gi0/1, Gi0/2
    1002 fddi-default                     act/unsup
    1003 token-ring-default               act/unsup
    1004 fddinet-default                  act/unsup
    1005 trnet-default                    act/unsup
            </pre>
        <b>Normal Range VLANs</b>
        <p>The following are characteristics of normal range VLANs:</p>
        <ul>
            <li>They are used in all small- and medium-sized business and enterprise networks.</li>
            <li>They are identified by a VLAN ID between 1 and 1005.</li>
            <li>IDs 1002 through 1005 are reserved for legacy network technologies (i.e., Token Ring and Fiber Distributed Data Interface).</li>
            <li>IDs 1 and 1002 to 1005 are automatically created and cannot be removed.</li>
            <li>Configurations are stored in the switch flash memory in a VLAN database file called vlan.dat.</li>
            <li> When configured, VLAN trunking protocol (VTP), helps synchronize the VLAN database between switches.</li>
        </ul>
        <b>Extended Range VLANs</b>
        <p>The following are characteristics of extended range VLANs:</p>
        <ul>
            <li>They are used by service providers to service multiple customers and by global enterprises large enough to need extended range VLAN IDs.</li>
            <li>They are identified by a VLAN ID between 1006 and 4094.</li>
            <li>Configurations are saved, by default, in the running configuration.</li>
            <li>They support fewer VLAN features than normal range VLANs.</li>
            <li>Requires VTP transparent mode configuration to support extended range VLANs.</li>
        </ul>
        <p>Note: 4096 is the upper boundary for the number of VLANs available on Catalyst switches, because there are 12 bits in the VLAN ID field of the IEEE 802.1Q header.</p>
        <h2>VLAN Creation Commands</h2>
        <p>
            When configuring normal range VLANs, the configuration details are stored in flash memory on the switch in a file called vlan.dat. Flash memory is persistent and does not require the copy running-config startup-config command. However, because other details are often configured on a Cisco switch at the same time that VLANs are created, it is good practice to save running configuration changes to the startup configuration.
            <br><br>
            The table displays the Cisco IOS command syntax used to add a VLAN to a switch and give it a name. Naming each VLAN is considered a best practice in switch configuration.
        </p>
        <table>
            <tr>
                <th>Task</th>
                <th>IOS Command</th>
            </tr>
            <tr>
                <td>Enter global configuration mode.</td>
                <td>Switch# <b>configure terminal</b></td>
            </tr>
            <tr>
                <td>Create a VLAN with a valid ID number.</td>
                <td>Switch(config)# <b>vlan</b> vlan-id</td>
            </tr>
            <tr>
                <td>Specify a unique name to identify the VLAN.</td>
                <td>Switch(config-vlan)# <b>name</b> vlan-name</td>
            </tr>
            <tr>
                <td>Return to the privileged EXEC mode.</td>
                <td>Switch(config-vlan)# <b>end</b></td>
            </tr>
        </table>
        <h2>VLAN Creation Example</h2>
        <p>In the topology, the student computer (PC2) has not been associated with a VLAN yet, but it does have an IP address of 172.17.20.22, which belongs to VLAN 20.</p>
        <img src="https://i.pinimg.com/736x/c5/c5/73/c5c573ab723421f5fc330a6fc3bfa694.jpg" alt="">
        <p>The example shows how the student VLAN (VLAN 20) is configured on switch S1.</p>
        <h4>
            S1# configure terminal
            <br>S1(config)# vlan 20
            <br>S1(config-vlan)# name student
            <br>S1(config-vlan)# end
        </h4>
        <p>
            Note: In addition to entering a single VLAN ID, a series of VLAN IDs can be entered separated by commas, or a range of VLAN IDs separated by hyphens using the vlan vlan-id command. For example, entering the vlan 100,102,105-107 global configuration command would create VLANs 100, 102, 105, 106, and 107.
        </p>
        <h2>VLAN Port Assignment Commands</h2>
        <p>
            After creating a VLAN, the next step is to assign ports to the VLAN.
            <br><br>
            The table displays the syntax for defining a port to be an access port and assigning it to a VLAN. The switchport mode access command is optional, but strongly recommended as a security best practice. With this command, the interface changes to strictly access mode. Access mode indicates that the port belongs to a single VLAN and will not negotiate to become a trunk link.
        </p>
        <table>
            <tr>
                <th>Task</th>
                <th>IOS Command</th>
            </tr>
            <tr>
                <td>Enter global configuration mode.</td>
                <td>Switch# <b>configure terminal</b></td>
            </tr>
            <tr>
                <td>Enter interface configuration mode.</td>
                <td>Switch(config)# <b>interface</b> interface-id</td>
            </tr>
            <tr>
                <td>Set the port to access mode.</td>
                <td>Switch(config-if)# <b>switchport mode access</b></td>
            </tr>
            <tr>
                <td>Assign the port to a VLAN.</td>
                <td>Switch(config-if)# <b>switchport access vlan</b> vlan-id</td>
            </tr>
            <tr>
                <td>Return to the privileged EXEC mode.</td>
                <td>Switch(config-if)# <b>end</b></td>
            </tr>
        </table>
        <p>Note: Use the <b>interface range</b> command to simultaneously configure multiple interfaces.</p>
        <h2>VLAN Port Assignment Example</h2>
        <p>In the figure, port F0/6 on switch S1 is configured as an access port and assigned to VLAN 20. Any device connected to that port will be associated with VLAN 20. Therefore, in our example, PC2 is in VLAN 20.</p>
        <img src="https://i.pinimg.com/736x/00/b8/be/00b8be56d5edc6a6fb851d293aa78efd.jpg" alt="">
        <p>The example shows the configuration for S1 to assign F0/6 to VLAN 20.</p>
        <h4>
            S1# <b>configure terminal</b>
            <br>S1(config)# <b>interface fa0/6</b>
            <br>S1(config-if)# <b>switchport mode access</b>
            <br>S1(config-if)# <b>switchport access vlan 20</b>
            <br>S1(config-if)# <b>end</b>
        </h4>
        <p>VLANs are configured on the switch port and not on the end device. PC2 is configured with an IPv4 address and subnet mask that is associated with the VLAN, which is configured on the switch port. In this example, it is VLAN 20. When VLAN 20 is configured on other switches, the network administrator must configure the other student computers to be in the same subnet as PC2 (172.17.20.0/24).</p>
        <h2>Data and Voice VLANs</h2>
        <p>An access port can belong to only one data VLAN at a time. However, a port can also be associated to a voice VLAN. For example, a port connected to an IP phone and an end device would be associated with two VLANs: one for voice and one for data.
            <br><br>
            Consider the topology in the figure. PC5 is connected to the Cisco IP phone, which in turn is connected to the FastEthernet 0/18 interface on S3. To implement this configuration, a data VLAN and a voice VLAN are created.</p>
        <img src="https://i.pinimg.com/736x/17/6e/af/176eaf6e0b2484d10a22550309d26e0c.jpg" alt="">
        <h2>Data and Voice VLAN Example</h2>
        <p>
            Use the switchport voice vlan vlan-id interface configuration command to assign a voice VLAN to a port.
            <br><br>
            LANs supporting voice traffic typically also have quality of service (QoS) enabled. Voice traffic must be labeled as trusted as soon as it enters the network. Use the mls qos trust [cos | device cisco-phone | dscp | ip-precedence] interface configuration command to set the trusted state of an interface, and to indicate which fields of the packet are used to classify traffic.
            <br><br>
            The configuration in the example creates the two VLANs (i.e., VLAN 20 and VLAN 150) and then assigns the F0/18 interface of S3 as a switchport in VLAN 20. It also assigns voice traffic to VLAN 150 and enables QoS classification based on the class of service (CoS) assigned by the IP phone.
        </p>
        <pre>S3(config)# vlan 20
            <br>S3(config-vlan)# name student
            <br>S3(config-vlan)# vlan 150
            <br>S3(config-vlan)# name VOICE
            <br>S3(config-vlan)# exit
            <br>S3(config)# interface fa0/18
            <br>S3(config-if)# switchport mode access
            <br>S3(config-if)# switchport access vlan 20
            <br>S3(config-if)# mls qos trust cos
            <br>S3(config-if)# switchport voice vlan 150
            <br>S3(config-if)# end
            <br>S3#
        </pre>
        <p>
            Note: The implementation of QoS is beyond the scope of this course.
            <br><br>
            The switchport access vlan command forces the creation of a VLAN if it does not already exist on the switch. For example, VLAN 30 is not present in the show vlan brief output of the switch. If the switchport access vlan 30 command is entered on any interface with no previous configuration, then the switch displays the following:      
        </p>
        <pre>% Access VLAN does not exist. Creating vlan 30 </pre>
        <h2>Verify VLAN Information</h2>
        <p>
            After a VLAN is configured, VLAN configurations can be validated using Cisco IOS show commands.
            <br><br>
            The show vlan command displays a list of all configured VLANs. The show vlan command can also be used with options. The complete syntax is show vlan [brief | id vlan-id | name vlan-name | summary].
            <br><br>
            The table describes the show vlan command options.
        </p>
        <table>
            <tr>
                <th>Task</th>
                <th>Command Option</th>
            </tr>
            <tr>
                <td>Display VLAN name, status, and its ports one VLAN per line.</td>
                <td>brief</td>
            </tr>
            <tr>
                <td>Display information about the identified VLAN ID number. For vlan-id, the range is 1 to 4094.</td>
                <td>id vlan-id</td>
            </tr>
            <tr>
                <td>Display information about the identified VLAN name. The vlan-name is an ASCII string from 1 to 32 characters.</td>
                <td>name vlan-name</td>
            </tr>
            <tr>
                <td>Display VLAN summary information.</td>
                <td>summary</td>
            </tr>
        </table>
        <p>The show vlan summary command displays the count of all configured VLANs.</p>
        <pre>
    S1# show vlan summary
    Number of existing VLANs              : 7
    Number of existing VTP VLANs          : 7
    Number of existing extended VLANS     : 0
        </pre>
        <p>
            Other useful commands are the show interfaces interface-id switchport and the show interfaces vlan vlan-id command. For example, the show interfaces fa0/18 switchport command can be used to confirm that the FastEthernet 0/18 port has been correctly assigned to data and voice VLANs.
        </p>
        <pre>
    S1# show interfaces fa0/18 switchport
    Name: Fa0/18
    Switchport: Enabled
    Administrative Mode: static access
    Operational Mode: static access
    Administrative Trunking Encapsulation: dot1q
    Operational Trunking Encapsulation: native
    Negotiation of Trunking: Off
    Access Mode VLAN: 20 (student) 
    Trunking Native Mode VLAN: 1 (default)
    Voice VLAN: 150
    Administrative private-vlan host-association: none
    (Output omitted)
        </pre>    
        <h2>Change VLAN Port Membership</h2>
        <p>
            There are a number of ways to change VLAN port membership.
            <br><br>
            If the switch access port has been incorrectly assigned to a VLAN, then simply re-enter the switchport access vlan vlan-id interface configuration command with the correct VLAN ID. For instance, assume Fa0/18 was incorrectly configured to be on the default VLAN 1 instead of VLAN 20. To change the port to VLAN 20, simply enter switchport access vlan 20.
            <br><br>
            To change the membership of a port back to the default VLAN 1, use the no switchport access vlan interface configuration mode command as shown.
            <br><br>
            In the output for example, Fa0/18 is configured to be on the default VLAN 1 as confirmed by the show vlan brief command.
        </p>
        <pre>
S1(config)# interface fa0/18
S1(config-if)# no switchport access vlan
S1(config-if)# end
S1#
S1# show vlan brief
VLAN Name                 Status    Ports
---- ------------------ --------- -------------------------------
1    default            active    Fa0/1, Fa0/2, Fa0/3, Fa0/4
                                  Fa0/5, Fa0/6, Fa0/7, Fa0/8
                                  Fa0/9, Fa0/10, Fa0/11, Fa0/12
                                  Fa0/13, Fa0/14, Fa0/15, Fa0/16
                                  Fa0/17, Fa0/18, Fa0/19, Fa0/20
                                  Fa0/21, Fa0/22, Fa0/23, Fa0/24
                                  Gi0/1, Gi0/2
20   student            active    
1002 fddi-default       act/unsup 
1003 token-ring-default act/unsup 
1004 fddinet-default    act/unsup 
1005 trnet-default      act/unsup
        </pre>
        <p>Notice that VLAN 20 is still active, even though no ports are assigned to it.
            <br><br>
            The show interfaces f0/18 switchport output can also be used to verify that the access VLAN for interface F0/18 has been reset to VLAN 1 as shown in the output.</p>
        <pre>
S1# show interfaces fa0/18 switchport
Name: Fa0/18
Switchport: Enabled
Administrative Mode: static access
Operational Mode: static access
Administrative Trunking Encapsulation: negotiate
Operational Trunking Encapsulation: native
Negotiation of Trunking: Off
Access Mode VLAN: 1 (default)
Trunking Native Mode VLAN: 1 (default)
        </pre>
        <h2>Delete VLANs</h2>
        <p>
            The <b>no vlan</b> vlan-id global configuration mode command is used to remove a VLAN from the switch vlan.dat file.
            <br><br>
            Caution: Before deleting a VLAN, reassign all member ports to a different VLAN first. Any ports that are not moved to an active VLAN are unable to communicate with other hosts after the VLAN is deleted and until they are assigned to an active VLAN.
            <br><br>
            The entire vlan.dat file can be deleted using the <b>delete flash:vlan.dat</b> privileged EXEC mode command. The abbreviated command version <b>(delete vlan.dat)</b> can be used if the vlan.dat file has not been moved from its default location. After issuing this command and reloading the switch, any previously configured VLANs are no longer present. This effectively places the switch into its factory default condition with regard to VLAN configurations.
            <br><br>
            Note: To restore a Catalyst switch to its factory default condition, unplug all cables except the console and power cable from the switch. Then enter the <b>erase startup-config</b> privileged EXEC mode command followed by the <b>delete vlan.dat</b> command.
        </p>
        <h1>VLAN Trunks</h1>
        <h2>Trunk Configuration Commands</h2>
        <p>
            Now that you have configured and verified VLANs, it is time to configure and verify VLAN trunks. A VLAN trunk is a Layer 2 link between two switches that carries traffic for all VLANs (unless the allowed VLAN list is restricted manually or dynamically).
            <br><br>
            To enable trunk links, configure the interconnecting ports with the set of interface configuration commands shown in the table.
        </p>
        <table>
            <tr>
                <th>Task</th>
                <th>ISO Command</th>
            </tr>
            <tr>
                <td>Enter global configuration mode.</td>
                <td>Switch# configure terminal</td>
            </tr>
            <tr>
                <td>Enter interface configuration mode.	</td>
                <td>Switch(config)# interface interface-id</td>
            </tr>
            <tr>
                <td>Set the port to permanent trunking mode.</td>
                <td>Switch(config-if)# switchport mode trunk</td>
            </tr>
            <tr>
                <td>Sets the native VLAN to something other than VLAN 1.</td>
                <td>Switch(config-if)# switchport trunk native vlan vlan-id</td>
            </tr>
            <tr>
                <td>Specify the list of VLANs to be allowed on the trunk link.</td>
                <td>Switch(config-if)# switchport trunk allowed vlan vlan-list</td>
            </tr>
            <tr>
                <td>Return to the privileged EXEC mode.</td>
                <td>Switch(config-if)# end</td>
            </tr>
        </table>
        <h2>Trunk Configuration Example</h2>
        <p>
            In the figure, VLANs 10, 20, and 30 support the Faculty, Student, and Guest computers (PC1, PC2, and PC3). The F0/1 port on switch S1 is configured as a trunk port and forwards traffic for VLANs 10, 20, and 30. VLAN 99 is configured as the native VLAN.
        </p>
        <img src="https://i.pinimg.com/736x/3a/6b/66/3a6b662cc217e898a7c5e51540675214.jpg" alt="">
        <p>The example shows the configuration of port F0/1 on switch S1 as a trunk port. The native VLAN is changed to VLAN 99 and the allowed VLAN list is restricted to 10, 20, 30, and 99.</p>
        <pre>
S1(config)# interface fastEthernet 0/1
S1(config-if)# switchport mode trunk
S1(config-if)# switchport trunk native vlan 99
S1(config-if)# switchport trunk allowed vlan 10,20,30,99
S1(config-if)# end
        </pre>
        <p>Note: This configuration assumes the use of Cisco Catalyst 2960 switches which automatically use 802.1Q encapsulation on trunk links. Other switches may require manual configuration of the encapsulation. Always configure both ends of a trunk link with the same native VLAN. If 802.1Q trunk configuration is not the same on both ends, Cisco IOS Software reports errors.</p>
        <h2>Verify Trunk Configuration</h2>
        <p>The switch output displays the configuration of switch port F0/1 on switch S1. The configuration is verified with the show interfaces interface-ID switchport command.</p>
        <pre>
S1# show interfaces fa0/1 switchport
Name: Fa0/1
Switchport: Enabled
Administrative Mode: trunk
Operational Mode: trunk
Administrative Trunking Encapsulation: dot1q
Operational Trunking Encapsulation: dot1q
Negotiation of Trunking: On
Access Mode VLAN: 1 (default)
Trunking Native Mode VLAN: 99 (VLAN0099)
Voice VLAN: none
Administrative private-vlan host-association: none 
Administrative private-vlan mapping: none 
Administrative private-vlan trunk native VLAN: none
Administrative private-vlan trunk encapsulation: dot1q
Administrative private-vlan trunk normal VLANs: none
Administrative private-vlan trunk associations: none
Administrative private-vlan trunk private VLANs: none 
Operational private-vlan: none
Trunking VLANs Enabled: 10,20,30,99
Pruning VLANs Enabled: 2-1001
(output omitted)
        </pre>
        <p>
            The top highlighted area shows that port F0/1 has its administrative mode set to trunk. The port is in trunking mode. The next highlighted area verifies that the native VLAN is VLAN 99. Further down in the output, the bottom highlighted area shows that VLANs 10, 20, 30, and 99 are enabled on the trunk.
        </p>
        <p>
            Note: Another useful command for veryfing trunk interfaces is the show interface trunk command.
        </p>

        <h2>Reset the Trunk to the Default State</h2>
        <p>Use the no switchport trunk allowed vlan and the no switchport trunk native vlan commands to remove the allowed VLANs and reset the native VLAN of the trunk. When it is reset to the default state, the trunk allows all VLANs and uses VLAN 1 as the native VLAN. The example shows the commands used to reset all trunking characteristics of a trunking interface to the default settings.</p>
        <pre>
S1(config)# interface fa0/1
S1(config-if)# no switchport trunk allowed vlan
S1(config-if)# no switchport trunk native vlan
S1(config-if)# end
        </pre>
        <p>
            The show interfaces fa0/1 switchport command reveals that the trunk has been reconfigured to a default state.
        </p>
        <pre>
S1# show interfaces fa0/1 switchport
Name: Fa0/1
Switchport: Enabled
Administrative Mode: trunk
Operational Mode: trunk
Administrative Trunking Encapsulation: dot1q
Operational Trunking Encapsulation: dot1q
Negotiation of Trunking: On
Access Mode VLAN: 1 (default) 
Trunking Native Mode VLAN: 1 (default)
Administrative Native VLAN tagging: enabled
Voice VLAN: none
Administrative private-vlan host-association: none 
Administrative private-vlan mapping: none 
Administrative private-vlan trunk native VLAN: none
Administrative private-vlan trunk Native VLAN tagging: enabled
Administrative private-vlan trunk encapsulation: dot1q
Administrative private-vlan trunk normal VLANs: none
Administrative private-vlan trunk associations: none
Administrative private-vlan trunk mappings: none
Operational private-vlan: none
Trunking VLANs Enabled: ALL
Pruning VLANs Enabled: 2-1001
(output omitted)
        </pre>
        <p>
            This sample output shows the commands used to remove the trunk feature from the F0/1 switch port on switch S1. The show interfaces f0/1 switchport command reveals that the F0/1 interface is now in static access mode.
        </p>
        <pre>
S1(config)# interface fa0/1
S1(config-if)# switchport mode access
S1(config-if)# end
S1# show interfaces fa0/1 switchport
Name: Fa0/1
Switchport: Enabled
Administrative Mode: static access
Operational Mode: static access
Administrative Trunking Encapsulation: dot1q
Operational Trunking Encapsulation: native
Negotiation of Trunking: Off
Access Mode VLAN: 1 (default)
Trunking Native Mode VLAN: 1 (default)
Administrative Native VLAN tagging: enabled
(output omitted)
        </pre>
        <h1>Dynamic Trunking Protocol</h1>
        <h2>Introduction to DTP</h2>
        <p>
            Some Cisco switches have a proprietary protocol that lets them automatically negotiate trunking with a neighboring device. This protocol is called Dynamic Trunking Protocol (DTP). DTP can speed up the configuration process for a network administrator. Ethernet trunk interfaces support different trunking modes. An interface can be set to trunking or nontrunking, or to negotiate trunking with the neighbor interface. Trunk negotiation is managed by DTP, which operates on a point-to-point basis only, between network devices.
            <br><br>
            DTP is a Cisco proprietary protocol that is automatically enabled on Catalyst 2960 and Catalyst 3650 Series switches. DTP manages trunk negotiation only if the port on the neighbor switch is configured in a trunk mode that supports DTP. Switches from other vendors do not support DTP.
            <br><br>
            Caution: Some internetworking devices might forward DTP frames improperly, which can cause misconfigurations. To avoid this, turn off DTP on Cisco switch interfaces that are connected to devices that do not support DTP.
            <br><br>
            The default DTP configuration for Cisco Catalyst 2960 and 3650 switches is dynamic auto.
            <br><br>
            To enable trunking from a Cisco switch to a device that does not support DTP, use the <b>switchport mode trunk</b> and <b>switchport nonegotiate</b> interface configuration mode commands. This causes the interface to become a trunk, but it will not generate DTP frames.
        </p>
        <pre>
S1(config-if)# switchport mode trunk
S1(config-if)# switchport nonegotiate</pre>
        <p>To re-enable dynamic trunking protocol use the <b>switchport mode dynamic</b> auto command.</p>
        <pre>S1(config-if)# switchport mode dynamic auto</pre>
        <p>
            If the ports connecting two switches are configured to ignore all DTP advertisements with the switchport mode trunk and the switchport nonegotiate commands, the ports will stay in trunk port mode. If the connecting ports are set to dynamic auto, they will not negotiate a trunk and will stay in the access mode state, creating an inactive trunk link.
            <br><br>
            When configuring a port to be in trunk mode, use the switchport mode trunk command. Then there is no ambiguity about which state the trunk is in; it is always on.
        </p>
        <h2>Negotiated Interface Modes</h2>
        <p>The switchport mode command has additional options for negotiating the interface mode. The full command syntax is the following:</p>
        <pre>Switch(config-if)# switchport mode { access | dynamic { auto | desirable } | trunk }</pre>
        <p>The options are described in the table.</p>
        <table>
            <tr>
                <th>Option</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>access</td>
                <td>
                    <li>Puts the interface (access port) into permanent nontrunking mode and negotiates to convert the link into a nontrunk link.</li>
                    <li>The interface becomes a nontrunk interface, regardless of whether the neighboring interface is a trunk interface.</li>
                </td>
            </tr>
            <tr>
                <td>dynamic auto</td>
                <td>
                    <li>Makes the interface able to convert the link to a trunk link.</li>
                    <li>The interface becomes a trunk interface if the neighboring interface is set to trunk or desirable mode.</li>
                    <li>The default switchport mode for all Ethernet interfaces is dynamic auto.</li>
                </td>
            </tr>
            <tr>
                <td>dynamic desirable</td>
                <td>
                    <li>Makes the interface actively attempt to convert the link to a trunk link.</li>
                    <li>The interface becomes a trunk interface if the neighboring interface is set to trunk, desirable, or dynamic auto mode.</li>
                </td>
            </tr>
            <tr>
                <td>trunk</td>
                <td>
                    <li>Puts the interface into permanent trunking mode and negotiates to convert the neighboring link into a trunk link.</li>
                    <li>The interface becomes a trunk interface even if the neighboring interface is not a trunk interface.</li>
                </td>
            </tr>
        </table>
        <p>Use the switchport nonegotiate interface configuration command to stop DTP negotiation. The switch does not engage in DTP negotiation on this interface. You can use this command only when the interface switchport mode is access or trunk. You must manually configure the neighboring interface as a trunk interface to establish a trunk link.</p>
        <h2>Results of a DTP Configuration</h2>
        <p>The table illustrates the results of the DTP configuration options on opposite ends of a trunk link connected to Catalyst 2960 switch ports. Best practice is to configure trunk links statically whenever possible.</p>
        <table>
            <tr>
                <th></th>
                <th>Dynamic Auto</th>
                <th>Dynamic Desirable</th>
                <th>Trunk</th>
                <th>Access</th>
            </tr>
            <tr>
                <th>Dynamic Auto</th>
                <td>Access</td>
                <td>Trunk</td>
                <td>Trunk</td>
                <td>Access</td>
            </tr>
            <tr>
                <th>Dynamic Desirable</th>
                <td>Trunk</td>
                <td>Trunk</td>
                <td>Trunk</td>
                <td>Access</td>
            </tr>
            <tr>
                <th>Trunk</th>
                <td>Trunk</td>
                <td>Trunk</td>
                <td>Trunk</td>
                <td>Limited connectivity</td>
            </tr>
            <tr>
                <th>Access</th>
                <td>Access</td>
                <td>Access</td>
                <td>Limited connectivity</td>
                <td>Access</td>
            </tr>
        </table>
        <h2>Verify DTP Mode</h2>
        <p>
            The default DTP mode is dependent on the Cisco IOS Software version and on the platform. To determine the current DTP mode, issue the show dtp interface command as shown in the output.
        </p>
        <pre>
S1# show dtp interface fa0/1
DTP information for FastEthernet0/1:
TOS/TAS/TNS: ACCESS/AUTO/ACCESS
TOT/TAT/TNT: NATIVE/NEGOTIATE/NATIVE
Neighbor address 1: C80084AEF101
Neighbor address 2: 000000000000
Hello timer expiration (sec/state): 11/RUNNING
Access timer expiration (sec/state): never/STOPPED
Negotiation timer expiration (sec/state): never/STOPPED
Multidrop timer expiration (sec/state): never/STOPPED
FSM state: S2:ACCESS
# times multi & trunk 0
Enabled: yes
In STP: no
        </pre>
        <p>Note: A general best practice is to set the interface to trunk and nonegotiate when a trunk link is required. On links where trunking is not intended, DTP should be turned off.</p>`,
  };
  if (number == 1) {
    document.getElementById('content').innerHTML = noiDung[1];
  } else if (number == 2) {
    document.getElementById('content').innerHTML = noiDung[2];
  } else if (number == 3)  {
    document.getElementById('content').innerHTML = noiDung[3];
  }
}
(function() {
  content(1);
})();